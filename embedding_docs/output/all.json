[
  {
    "id": 1,
    "content": "\n\n# Explore Edu Chain Ecosystem   \nBrowse and explore dapps from **DeFi**, **Infra** to **EDUFI**, and more, which are helping to \nbring education on-chain to **EDUCHAIN**.   \n \n## DApps List   \n \n| Name         | URL                          | Description | Category      | \n|--------------|------------------------------|-------------|---------------| \n| **SailFish** | [sailfish.finance](https://sailfish.finance/) | SailFish is the first DEX on \nOpencampus EDUCHAIN. Built to be fast and efficient, SailFish is a veDEX that distributes \n100% of protocol fees to users. | **DeFi** | \n| **MoveFlow** | [app.edu.moveflow.xyz](https://app.edu.moveflow.xyz/) | MoveFlow is the \nPayFi stack on EduChain, offering innovative streaming payment, buy now pay never solution for \nmanaging and optimizing on-chain payments for education. | **DeFi** | \n| **Blend**    | [app.blend.fan](https://app.blend.fan/) | Blend is a decentralised, non-custodial \nlending protocol on Educhain. | **DeFi** | \n| **Camelot**  | [app.camelot.exchange](https://app.camelot.exchange/) | Camelot is a \ndecentralized and permissionless exchange that supports the Arbitrum ecosystem with highly \nefficient liquidity infrastructure. | **DeFi** | \n| **GainzSwap** | [gainzswap.xyz](https://gainzswap.xyz/) | GainzSwap is a community-driven \ndecentralised exchange (DEX) designed to enhance sustained liquidity in DeFi. It features \ndynamic swapping fees, a deflationary Gainz token model, and governance through GToken. | \n**DeFi** | \n| **ThrustPad** | [thrustpad.finance](https://thrustpad.finance/) | ThrustPad is an innovative \nInitial Liquidity Offering (ILO) platform seamlessly built on the Educhain blockchain. Designed to \nempower projects and investors alike with a comprehensive suite of tools and services on their \nfundraising journey. | **Infrastructure** | \n| **EduScan**  | [eduscan.xyz](https://www.eduscan.xyz/) | EduScan is the best custom \nblockchain explorer for Educhain. It supports both mainnet & testnet. You can explore wallets, \ntransactions, blocks, tokens & the latest state data. | **Infrastructure** | \n| **Grasp Academy** | [grasp.academy](https://grasp.academy/) | Grasp is the premier \neducational content platform where educators and creators can share their work and earn on \nEDU Chain. Powered by Open Campus, the Grasp web3 platform integrates EduFi, enabling \nusers to learn, earn, and be rewarded for academic excellence. | **Infrastructure** | \n| **EduHub**   | [eduhub.dev](https://eduhub.dev/) | Building community and developer tools \nfor EDU Chain, so that anyone can quickly learn and ship awesome educational or any type of \ndApps on-chain. | **Infrastructure** | \n\n| **EduGPT**   | [ai.eduhub.dev](https://ai.eduhub.dev/) | EduGPT aims to simplify blockchain \ndata (AI Explorer) and build complex Web3 projects (For Developers). It explains everything in a \nsimple, fun way, helping you learn and build awesome projects quickly and easily on EduChain. \n| **Infrastructure** | \n| **Daily Wiser** | [dailywiser.xyz](http://dailywiser.xyz/) | Daily Wiser is an innovative mobile-\nfirst learning platform that transforms personal growth into an engaging daily habit. | \n**Education** | \n| **TinyTap**  | [campus.tinytap.com](https://campus.tinytap.com/) | TinyTap is a library of \neducational games for kids handmade by teachers, therapists, and education experts from all \nover the world. TinyTap is designed to help you turn playtime into a learning opportunity! | \n**Education** | \n| **Pody Network** | [pody.network](https://pody.network/) | Pody Network is a decentralized \nplatform built for virtual classrooms, offering interactive environments for education. Users \nengage in real-time learning while earning rewards for active participation. | **Education** | \n| **Proof of Learn** | [pol.solide0x.tech](https://pol.solide0x.tech/) | Proof of Learn is an \ninnovative online platform that ensures interactive, transparent, and verifiable learning across \n100+ blockchains, rewarding users with NFT POAPs for genuine engagement and \naccomplishment. | **Education** | ",
    "filename": "000.Ecosystem.pdf"
  },
  {
    "id": 2,
    "content": "\n\nGlossary \nA quick guide to Web3 terms - whether you're a beginner or a pro, find clear explanations to \nnavigate the decentralized landscape \n \n## Airdrop\\n\\nFree distribution of crypto or NFTs to promote a project or reward users.\\n\\n## \nAlgorithm\\n\\nThe set of rules governing how a blockchain operates, like Proof of Work or Proof of \nStake.\\n\\n## AML (Anti-Money Laundering)\\n\\nIn the context of Web3, Anti-Money Laundering \n(AML) refers to a set of laws, regulations, and procedures designed to prevent criminals from \ndisguising illegally obtained funds as legitimate income.\\n\\n## API (Application Programming \nInterface)\\n\\nIn the context of Web3, an API (Application Programming Interface) is a set of \nprotocols, tools, and definitions that allows different software applications to communicate \nwith each other.\\n\\n## ASIC Resistant\\n\\nDesigned to resist efficient mining by specialized \nASIC hardware.\\n\\n## Attestation\\n\\nProof of identity or specific attributes on a blockchain for \nvarious use cases.\\n\\n## ASIC (Application-Specific Integrated Circuit)\\n\\nSpecialized \nhardware for mining certain cryptocurrencies more efficiently.\\n\\n## Automatic Replay \nProtection\\n\\nAutomatic Replay Protection in Web3 refers to mechanisms that prevent replay \nattacks.\\n\\n## All-Time-Low (ATL)\\n\\nIn the context of Web3, All-Time Low (ATL) refers to the \nlowest price level that a cryptocurrency or token has ever reached since its inception.\\n\\n## \nArbitrum Stylus\\n\\nOffchain Labs, the team behind Arbitrum, launched the code and public \ntestnet for Arbitrum Stylus, a new addition to the Arbitrum Nitro technology stack that enhances \nsupport for Arbitrum One, Arbitrum Nova, and Arbitrum Orbit chains.\\n\\n## Arbitrum \nOrbit\\n\\nArbitrum Orbit, introduced by Arbitrum in March 2023, gives users the tools to create \ntheir own Layer 3 (which is a layer on top of the Ethereum mainnet Layer 1 and Layer 2, so it's \ncalled Layer 3).\\n\\n## Arbitrum Nova\\n\\nArbitrum Nova is a different Layer 2 option in the \nArbitrum family that has different use case than Arbitrum One.\\n\\n## Arbitrum \nNitro\\n\\nArbitrum Nitro is NOT considered as a separate network, but a technical stack upgrade \nof Arbitrum One.\\n\\n## Arbitrum One\\n\\nArbitrum is a Layer 2 scaling solution for the Ethereum \nblockchain that lowers transaction costs and empowers fast smart contract \ntransactions.\\n\\n## Arbitrum\\n\\nArbitrum is a Layer 2 scaling solution for the Ethereum \nblockchain that lowers transaction costs and empowers fast smart contract \ntransactions.\\n\\n## AppChain\\n\\nA specialized blockchain dedicated to a specific community \nor application.\\n\\n## ArbOS\\n\\nArbOS serves as the Layer 2 EVM hypervisor that creates the \noperational environment for L2 Arbitrum. It oversees and allocates network resources, forms \nblocks from received messages, and runs its modified version of Geth to execute smart \ncontracts.\\n\\n## Address\\n\\nAn \"address\" in Web3 serves as a cornerstone in the architecture \nof blockchain networks, similar to an account number in traditional banking.\\n\\n## Actor \nModel\\n\\nThe Actor Model is a conceptual model used to design and implement concurrent \nand distributed systems. It treats \"actors\" as the fundamental units of computation.\\n\\n## \nAlgorithmic Stablecoin\\n\\nA crypto whose value is algorithmically maintained near a target \nprice, often using another asset.\\n\\n## Address Delegation\\n\\nAddress delegation in Web3 is \nthe process where one blockchain address grants certain rights or permissions to another \naddress to act on its behalf.\\n\\n## All-Time-High (ATH)\\n\\nIn the context of Web3, All-Time High \n(ATH) refers to the highest price level that a cryptocurrency or token has ever reached since its \ninception.\\n\\n## Actor\\n\\nIn the context of blockchain and decentralized systems, an Actor \nrefers to any entity that interacts with the blockchain network.\\n\\n## Arbitrage\\n\\nIn the context \n\nof Web3, Arbitrage refers to the practice of taking advantage of price differences between two or \nmore markets.\\n\\n## Altcoin\\n\\nAny cryptocurrency other than Bitcoin.\\n\\n## Atomic \nSWAP\\n\\nIn the context of Web3, an Atomic Swap is a smart contract technology that enables \nthe exchange of one cryptocurrency for another without the need for a centralized intermediary, \nsuch as an exchange.\\n\\n## Account\\n\\nA unique identifier on a blockchain, like a bank \naccount, holding your crypto and interacting with dApps.\\n\\n## Air-gapping\\n\\nDisconnecting a \ndevice from the internet to store crypto offline for maximum security.\\n\\n## Allowlist\\n\\nA \nwhitelist, granting exclusive access to certain events or opportunities in a Web3 project.\\n\\n## \nAsk Me Anything (AMA)\\n\\nIn the context of Web3, Ask Me Anything (AMA) is an interactive event \nwhere individuals or groups answer questions from the community in real-time.\\n\\n## \nAnchor\\n\\nAnchor is a widely used framework in the Solana ecosystem and simplifies the \nprocess of building Solana programs.\\n\\n## API Node\\n\\nAPI nodes are fundamental \ncomponents of blockchain networks, providing essential services for data access, transaction \nprocessing, and smart contract execution. By understanding and leveraging API nodes, \ndevelopers and stakeholders can enhance the functionality and reliability of decentralized \napplications and services, driving innovation in the Web3 space.\\n\\n## Address-Own \nObject\\n\\nIn the Web3 ecosystem, address-owned objects are digital assets linked to a unique \n32-byte address. This address can be an account address derived from a signature scheme or \nan object ID. The primary feature of address-owned objects is their exclusive accessibility; only \nthe owner of the associated address can access and manage these objects.\\n\\n## Account \nAbstraction\\n\\nAccount abstraction represents a significant advancement in blockchain \ntechnology, addressing the limitations of traditional EOAs and SCAs. XION’s protocol-level \nsolution exemplifies this innovation, offering a more secure, flexible, and user-friendly approach \nto blockchain interactions. As blockchain technology continues to evolve, account abstraction \nwill play a crucial role in enhancing usability and expanding the potential applications of \ndecentralized systems.\\n\\n## Abstracted Interoperability\\n\\nAbstracted Interoperability is a \ngame-changing concept in the blockchain industry, and XION’s implementation of this \ntechnology exemplifies its potential. By enabling seamless cross-chain interactions, XION not \nonly simplifies the user experience but also enhances accessibility, security, and liquidity \nacross the entire blockchain ecosystem.\\n\\n## Bearish\\n\\nExpecting prices to fall and \npessimistic about the market outlook.\\n\\n## Bots\\n\\nAutomated programs interacting with \nexchanges or platforms to execute trades or gather information.\\n\\n## Bullish\\n\\nExpecting \nprices to rise and optimistic about the market outlook.\\n\\n## BUIDL\\n\\nA slang term for \nbuilding and developing in the Web3 space.\\n\\n## Bagholder\\n\\nThe term \"bagholder\" is a vivid \nillustration of the challenges and risks inherent in cryptocurrency investing. While it often \ncarries a negative connotation, understanding its meaning and implications can help investors \nmake more informed decisions and avoid the pitfalls that lead to becoming a bagholder. By \nadopting strategies such as diversification, setting stop-loss orders, and staying informed, \ninvestors can better navigate the volatile waters of the crypto market and improve their chances \nof success in the Web3 era.\\n\\n## Block Explorer\\n\\nA tool to search and view information \nabout blocks and transactions on a blockchain.\\n\\n## Bitcoin ATM\\n\\nAn ATM-like machine for \nbuying and selling Bitcoin with cash.\\n\\n## Bridge\\n\\nA tool facilitating the transfer of assets \nbetween different blockchains.\\n\\n## Beacon Chain\\n\\nA central coordinating chain in \nEthereum's Proof of Stake system.\\n\\n## Bitcoin Improvement Proposal (BIP)\\n\\nProposed \nchanges to the Bitcoin protocol requiring community consensus.\\n\\n## Block \nConfirmation\\n\\nVerification of a block by the network, proving its validity.\\n\\n## Block \nReward\\n\\nThe incentive awarded to miners for verifying transactions and adding new \nblocks.\\n\\n## Block Time\\n\\nThe average time it takes to add a new block to a \n\nblockchain.\\n\\n## Blockchain Explorer\\n\\nSee Block Explorer.\\n\\n## Blockchain \nTrilemma\\n\\nThe challenge of balancing scalability, security, and decentralization in blockchain \ntechnology.\\n\\n## Brain Wallet\\n\\nStoring your crypto private key only in your memory, a highly \nrisky practice.\\n\\n## Block Height\\n\\nThe number of blocks added to a blockchain since its \ncreation.\\n\\n## BTD\\n\\n\"Buy The Dip\" refers to a common investment strategy in \ncryptocurrency and stock markets where investors purchase assets after a significant price \ndecline, anticipating a rebound and potential profit.\\n\\n## Batch Auction\\n\\nGrouping multiple \norders together for execution at a specific time.\\n\\n## Blockchain\\n\\nBlockchain is a \ntransformative technology that underpins the decentralized digital economy. By providing a \nsecure, transparent, and tamper-proof record of transactions, blockchain technology is \nrevolutionizing various industries and enabling the development of innovative applications. \nUnderstanding and leveraging blockchain is essential for developers, businesses, and \nindividuals looking to participate in the Web3 ecosystem.\\n\\n## Block\\n\\nBlocks are a \nfundamental component of blockchain technology, ensuring the secure and transparent \nrecording of transactions and data. By understanding and leveraging blocks, developers and \nstakeholders can enhance the functionality and security of decentralized applications and \nnetworks. As Web3 continues to evolve,\\n\\n## Bitcoin Evangelist\\n\\nAn enthusiastic supporter \nand promoter of Bitcoin.\\n\\n## Bear Market\\n\\nA prolonged period of declining crypto prices \nand negative sentiment.\\n\\n## Bitcoin / bitcoin (BTC)\\n\\nThe first and most popular \ncryptocurrency.\\n\\n## BitLicense\\n\\nA New York State license for businesses handling virtual \ncurrencies.\\n\\n## Bloodbath\\n\\nA sudden, sharp decline in cryptocurrency prices.\\n\\n## Bull \nMarket\\n\\nBull MarketA prolonged period of rising crypto prices and optimistic \nsentiment.\\n\\n## Burned Tokens\\n\\nRemoving tokens permanently from circulation, potentially \nincreasing scarcity and value.\\n\\n## Backpack\\n\\nBackpack in the Web3 context is not about \nthe physical item you carry on your shoulders; instead, it’s a Solana-based NFT wallet app that \nprovides users a smooth way to manage assets and NFTs within the Galxe web3 \ncommunity.\\n\\n## Bounty\\n\\nBounties play a vital role in the Web3 ecosystem, offering a \ndecentralized and efficient way to incentivize community contributions. Whether it’s securing a \nnetwork, developing new features, promoting a project, or gathering user feedback, bounties \nhelp projects achieve their objectives while rewarding participants for their efforts.\\n\\n## \nBakkt\\n\\nBakkt is more than a cryptocurrency exchange; it's a comprehensive digital asset \nplatform that is shaping the future of how digital assets are traded, stored, and used across the \nglobe. By understanding Bakkt's role and functionalities, participants in the Web3 ecosystem \ncan better navigate the complexities of digital finance.\\n\\n## cc0 NFT\\n\\nA Creative Commons \nZero NFT, meaning the intellectual property rights are completely relinquished by the creator, \nallowing anyone to freely use and modify the work without restriction.\\n\\n## Collection\\n\\nA \ngroup of NFTs with shared characteristics, often created by the same artist or project.\\n\\n## \nConsenSys\\n\\nA leading blockchain technology company offering various products and \nservices.\\n\\n## Client (Ethereum or other compatible blockchain)\\n\\nSoftware applications \ninteracting with a specific blockchain network, like MetaMask or MyEtherWallet for \nEthereum.\\n\\n## Cloud Mining\\n\\nRenting or leasing access to mining hardware in data centers \ninstead of owning and operating your own.\\n\\n## Codefi\\n\\nA software library providing building \nblocks for developers to create smart contracts and dApps.\\n\\n## Confirmation\\n\\nThe process \nof verifying a transaction on a blockchain and adding it to a permanent block.\\n\\n## \nConsensus\\n\\nThe agreement mechanism used by a blockchain network to validate \ntransactions and maintain a shared state.\\n\\n## Composability\\n\\nThe ability of different \ndApps and smart contracts to interact and build upon each other.\\n\\n## Central Ledger\\n\\nA \nsingle, centralized database controlled by a specific entity, unlike the distributed ledger of \n\nblockchains.\\n\\n## Centralized\\n\\nOperated by a single entity with control over the system, \nopposite to decentralized.\\n\\n## Contract\\n\\nA self-executing program on a blockchain that \nautomatically enforces predefined rules upon certain conditions.\\n\\n## Cryptocurrency\\n\\nA \ndigital asset designed to function as a medium of exchange, using cryptography for security and \ndecentralization.\\n\\n## Challenge\\n\\nWhen two Stakers have conflicting views on the \nappropriate judgment for an Assertion, they can be entered into a challenge.\\n\\n## Central \nBank Digital Currency (CBDC)\\n\\nA digital currency issued and backed by a central bank, \nsimilar to traditional fiat currency but existing solely in electronic form.\\n\\n## Circulating \nSupply\\n\\nThe total amount of a cryptocurrency currently available for trading or use.\\n\\n## \nCoin\\n\\nA cryptocurrency designed to primarily function as a medium of exchange, like \nBitcoin.\\n\\n## Cold Storage\\n\\nStoring cryptocurrency offline in a secure way, like hardware \nwallets or paper wallets, to minimize hacking risks.\\n\\n## Cold Wallet\\n\\nA physical device for \nstoring cryptocurrency offline, providing greater security than hot wallets.\\n\\n## Collateralized \nDebt Obligation (CDO)\\n\\nA complex financial instrument combining multiple debt exposures, \nnot directly related to Web3 but sometimes mentioned in DeFi contexts.\\n\\n## Constantinople \nfork\\n\\nA major upgrade to the Ethereum blockchain in 2019, introducing efficiency \nimprovements and network changes.\\n\\n## Crowdsale\\n\\nA fundraising method where \nparticipants purchase tokens or coins in exchange for contributions to a project.\\n\\n## Crypto-\n\\n\\nPrefix commonly used for terms related to cryptocurrency and blockchain \ntechnology.\\n\\n## Crypto bounties\\n\\nRewards offered for discovering vulnerabilities, bugs, or \ncompleting specific tasks in Web3 projects.\\n\\n## Crypto Bubble\\n\\nA period of rapid price \ninflation in the cryptocurrency market, often followed by a sharp correction.\\n\\n## \nCryptoassets\\n\\nDigital assets utilizing cryptography for security and verification, including \ncryptocurrencies and NFTs.\\n\\n## Crypto-compliance\\n\\nPractices ensuring adherence to \nregulations and laws related to cryptocurrencies and blockchain activities.\\n\\n## \nCryptocurrency Act of 2020\\n\\nA proposed US legislation aiming to regulate cryptocurrency \nactivities, still under debate.\\n\\n## Cryptoeconomics\\n\\nThe study of economic models and \nincentives used in cryptocurrencies and blockchain systems.\\n\\n## Cryptography\\n\\nThe \nscience of secure communication using codes and algorithms to encrypt and decrypt \ninformation.\\n\\n## Custody\\n\\nThe holding and safeguarding of cryptocurrency by a third party, \nlike an exchange or custodian.\\n\\n## Cryptosis\\n\\nCryptosis refers to an intense obsession or \nexcessive involvement with cryptocurrencies and the broader digital asset market.\\n\\n## \nCompute Units\\n\\nAt its core, a compute unit is a measure of computational effort or capacity \nrequired to execute operations on a blockchain network.\\n\\n## Circuit\\n\\nIn the context of \nWeb3 and cryptographic protocols, a circuit is a mathematical and logical representation of a \ncomputation that facilitates efficient and secure verification processes, such as in zero-\nknowledge proofs.\\n\\n## Complex Transactions\\n\\nComplex transactions in the context of \nWeb3 refer to sophisticated operations executed on blockchain networks, particularly through \nsmart contracts. Unlike simple transactions that involve transferring cryptocurrencies between \nwallets, complex transactions involve multiple conditions, triggers, or steps that must be \nfulfilled for the transaction to execute autonomously.\\n\\n## Causal History\\n\\nCausal History \nrefers to the ordered sequence of causal relationships between events or transactions within a \ndistributed system, such as a blockchain. It establishes a chronological chain of cause-and-\neffect relationships, crucial for maintaining consistency and predictability in decentralized \nnetworks.\\n\\n## Causal Order\\n\\nCausal Order refers to the sequence and relationship \nbetween transactions and the objects they generate, presented as dependencies. In a \nblockchain context, this means validators must execute transactions in a specific order to \nrespect these dependencies. Unlike total order, where every transaction is sequentially ordered, \n\nSui blockchain uses causal order, which is a partial order that respects the dependencies \namong transactions without imposing a strict sequential order.\\n\\n## Chain \nAbstraction\\n\\nChain Abstraction is a game-changer in the Web3 landscape. By removing the \ntechnical barriers and complexities that have hindered mainstream adoption, it opens the door \nfor more people to experience the benefits of decentralized technology. XION’s Chain \nAbstraction solution is a prime example of how this can be achieved, offering a user-friendly \nexperience that rivals Web2 while maintaining the integrity of Web3.\\n\\n## Dead Cat \nBounce\\n\\nA brief temporary rise in price after a significant decline, often a false signal of \nrecovery.\\n\\n## Do Your Own Research (DYOR)\\n\\nA crucial principle in Web3, emphasizing \npersonal research and critical thinking before making investment decisions.\\n\\n## Degen\\n\\nA \nslang term in the crypto community for someone taking high-risk, speculative bets, often \nassociated with DeFi or meme coins.\\n\\n## Distributed Denial of Service (DDoS) Attack\\n\\nAn \nattempt to overwhelm a system with traffic from multiple sources, disrupting its normal \noperation.\\n\\n## Decryption\\n\\nThe process of converting encrypted data back into its original \nreadable form.\\n\\n## dApp (Decentralized App)\\n\\nAn application built on a blockchain \nnetwork, offering functionalities without a single point of control.\\n\\n## Delegated Proof-of-\nStake (dPOS)\\n\\nA consensus mechanism where token holders delegate their voting power to \nelected representatives (\"validators\") who secure the network.\\n\\n## Devcon\\n\\nA large \nEthereum developer conference focusing on technical discussions and project \npresentations.\\n\\n## Difficulty\\n\\nA measure of how hard it is to mine a new block on a Proof-\nof-Work blockchain, adjusting automatically to maintain a desired block time.\\n\\n## Difficulty \nBomb\\n\\nA mechanism in Ethereum's protocol gradually increasing mining difficulty over time, \neventually transitioning to Proof-of-Stake.\\n\\n## Digital Identity\\n\\nA digital representation of an \nindividual's identity used in online interactions, potentially leveraging blockchain \ntechnology.\\n\\n## Distributed Ledger Technology (DLT)\\n\\nThe overarching term for \ntechnologies enabling distributed ledgers, encompassing blockchain and other \nvariations.\\n\\n## Double Spend\\n\\nAttempting to spend the same digital asset twice, a problem \nprevented by the security mechanisms of cryptocurrencies.\\n\\n## Data Availability\\n\\n\"Data \navailability\" in blockchain ensures all network participants can access and verify essential data, \nmaintaining integrity and transparency.\\n\\n## DAO (Decentralized Autonomous \nOrganization)\\n\\nA community-driven organization governed by smart contracts and token-\nbased voting, operating without a central authority.\\n\\n## Decentralization\\n\\nThe distribution \nof control and decision-making across a network rather than a single entity.\\n\\n## \nDecentralized\\n\\nOperated without a central authority, relying on distributed consensus \nmechanisms.\\n\\n## Deposit\\n\\nPlacing funds or assets into a specific platform or application \nfor various purposes, like earning interest in DeFi.\\n\\n## Digital Asset\\n\\nAny intangible asset \nexisting in digital form, including cryptocurrencies, NFTs, and other tokens.\\n\\n## Digital \nSignature\\n\\nA cryptographic technique used to authenticate the identity of a sender and \nensure the integrity of data.\\n\\n## Distributed Ledger\\n\\nA database replicated across multiple \ncomputers, ensuring transparency and immutability of recorded data.\\n\\n## Data Availability \nCommittee (DAC)\\n\\nThe primary role of a Data Availability Committee is to monitor, store, and \npossibly attest to the availability of data necessary for verifying transactions that have been \nprocessed off-chain.\\n\\n## Daily Active Addresses (DAA)\\n\\nThe number of unique blockchain \naddresses holding or transacting assets within a 24-hour period.\\n\\n## Decentralized Exchange \n(DEX)\\n\\nA cryptocurrency exchange platform operating on a blockchain, eliminating the need \nfor centralized intermediaries.\\n\\n## Decentralized Finance (DeFi)\\n\\nA financial system built \non blockchain technology, offering services like lending, borrowing, and trading without \ntraditional intermediaries.\\n\\n## Derivatives\\n\\nFinancial contracts whose value is derived from \n\nthe underlying price of another asset, like cryptocurrency derivatives tracking Bitcoin \nprice.\\n\\n## Derivatives Market\\n\\nThe marketplace where derivatives are traded, including \ncryptocurrency derivatives exchanges.\\n\\n## Derive / Derivation\\n\\nThe process of obtaining a \nnew value or entity based on an existing one, commonly used in cryptography and smart \ncontracts.\\n\\n## Directed Acyclic Graph (DAG)\\n\\nA data structure used in some blockchain \nalternatives, offering faster transaction processing compared to traditional blockchains.\\n\\n## \nDominance\\n\\nThe market share of a specific cryptocurrency compared to the total \ncryptocurrency market capitalization.\\n\\n## Dump\\n\\nA sudden and significant price decline in \na cryptocurrency.\\n\\n## Dusting Attack\\n\\nSending tiny amounts of cryptocurrency to many \nwallets to spam or track users, disrupting their functionality.\\n\\n## Dutch Auction\\n\\nAn \nauction where the price starts high and gradually decreases until someone bids, aiming for a fair \nmarket price discovery.\\n\\n## Data Availability Certificate\\n\\nData Availability Certificate (DAC) \nis a cryptographic proof used to verify that a specific set of data is publicly available and can be \naccessed by anyone on the network.\\n\\n## Device Abstraction\\n\\nDevice Abstraction is a \npivotal advancement in the Web3 landscape, addressing the complexities and risks associated \nwith traditional blockchain interactions. XION’s approach to Device Abstraction enhances \nsecurity, simplifies multi-device interactions, and offers diverse login methods that cater to a \nwide audience. As Web3 continues to evolve, Device Abstraction will play a crucial role in \nmaking blockchain technology more accessible and user-friendly, paving the way for broader \nadoption and integration into daily life.\\n\\n## ERC-1155\\n\\nA token standard enabling the \ncreation of fungible and non-fungible tokens within a single contract, offering more \nflexibility.\\n\\n## ERC-721\\n\\nA token standard for non-fungible tokens (NFTs) on the Ethereum \nblockchain, ensuring unique ownership and transferability.\\n\\n## EIP (Ethereum Improvement \nProposal)\\n\\nA formal suggestion for improving the Ethereum protocol, requiring community \ndiscussion and voting for implementation.\\n\\n## Emission\\n\\nThe process of creating new \ntokens or coins, often through mining or staking rewards.\\n\\n## Encrypted vs Unencrypted \nKeys\\n\\nCryptographic keys used to access or control cryptocurrencies; encrypted keys offer \nbetter security against unauthorized access.\\n\\n## Encryption\\n\\nThe process of scrambling \ndata into an unreadable format using cryptography, requiring a decryption key to access the \noriginal information.\\n\\n## ENS (Ethereum Name Service)\\n\\nA blockchain-based system for \nassigning human-readable names to Ethereum addresses and other crypto identities.\\n\\n## \nEntropy\\n\\nA measure of randomness or disorder, used in cryptography to generate \nunpredictable keys and secure transactions.\\n\\n## Epoch\\n\\nA specific time period in a \nblockchain network, used for various purposes like tracking rewards or protocol updates.\\n\\n## \nERC\\n\\nEthereum Request for Comments, a proposal category for standardizing aspects of the \nEthereum ecosystem, including token standards.\\n\\n## Ether (denominations)\\n\\nUnits of ETH, \nsimilar to cents for dollars, with common denominations like wei, gwei, and ether (ETH).\\n\\n## \nEtherscan\\n\\nA popular block explorer for the Ethereum blockchain, allowing users to search \ntransactions, track addresses, and view blockchain data.\\n\\n## Externally Owned Accounts \n(EOA)\\n\\nStandard accounts on a blockchain controlled by private keys, used for sending and \nreceiving cryptocurrency.\\n\\n## Ethereum\\n\\nA decentralized open-source blockchain platform \nknown for smart contracts and various applications beyond just cryptocurrency.\\n\\n## \nEthereum Virtual Machine (EVM)\\n\\nA runtime environment within the Ethereum\\n\\n## \nExchange\\n\\nA platform where users can buy, sell, and trade cryptocurrencies or other digital \nassets.\\n\\n## Explain Like I'm Five (ELI5)\\n\\nA widely used token standard for fungible tokens on \nthe Ethereum blockchain, defining properties and functionalities.\\n\\n## EVM+\\n\\nEVM+ \nrepresents an enhancement to the Ethereum Virtual Machine (EVM), as outlined in its proposal: \n\"EIP: Decimal math for EVM. If EVM is a basic calculator, EVM+ is a scientific calculator.\"\\n\\n## \n\nETH (Ethereum)\\n\\nThe native cryptocurrency of the Ethereum blockchain, used for \ntransactions, gas fees, and various applications.\\n\\n## Exchange Traded Fund (ETF)\\n\\nA \nfinancial instrument that tracks an underlying asset or basket of assets and trades on a \ntraditional stock exchange, not directly related to cryptocurrency but sometimes offered for \ncrypto exposure.\\n\\n## Ed25519\\n\\nThe Ed25519 curve is a specific type of elliptic curve \ncryptography (ECC) used for generating digital signatures, a fundamental aspect of blockchain \ntransactions.\\n\\n## Enterprise Ethereum Alliance (EEA)\\n\\nA consortium of businesses \ncollaborating to promote the development and adoption of Ethereum for enterprise use \ncases.\\n\\n## Execution Trace\\n\\nAn execution trace is a detailed record of all operations \nperformed during the execution of a smart contract or transaction on a blockchain.\\n\\n## EVM \n(Ethereum Virtual Machine)\\n\\nSee Ethereum Virtual Machine.\\n\\n## \nEquivocation\\n\\nEquivocation is a way of speaking that is intentionally not clear and confusing \nto other people, especially to hide the truth, or something said in this way. For example: He \nanswered openly and honestly without hesitation or equivocation.\\n\\n## Eventual \nConsistency\\n\\nEventual Consistency is a consensus model used in distributed systems, \nincluding blockchain networks like Sui. In this model, if one honest validator certifies a \ntransaction, all other honest validators will eventually certify it as well. This approach ensures \nthat, over time, all nodes in the network converge to the same state, maintaining consistency \nacross the system.\\n\\n## Embedding Model\\n\\nAn embedding model is an algorithm designed \nto convert information into dense representations in a multi-dimensional space. These \nrepresentations, or embeddings, enable machine learning (ML) models to comprehend and \nreason with high-dimensional data more efficiently. By encapsulating complex data into \ncompact vectors, embedding models facilitate various ML applications, including natural \nlanguage processing, recommendation systems, and more.\\n\\n## EDU Chain\\n\\nEDU Chain is \npoised to revolutionize the education sector by leveraging the power of blockchain technology \nto create a decentralized, transparent, and efficient ecosystem for learning. By addressing the \ninherent challenges within the current education system, EDU Chain offers a new model for \neducation that empowers learners, institutions, and developers alike. As the Web3 ecosystem \ncontinues to evolve, EDU Chain will play a crucial role in shaping the future of education, \nensuring that it remains accessible, verifiable, and equitable for all.\\n\\n## Fear of Missing Out \n(FOMO)\\n\\nThe anxiety of missing out on a potential opportunity, often leading to impulsive \ninvestment decisions.\\n\\n## Fear, Uncertainty and Doubt (FUD)\\n\\nSpreading negative \ninformation or skepticism to manipulate prices or sentiment in the market.\\n\\n## Fraud \nProof\\n\\nA fraud proof, also known as fault proof, is evidence presented by a verifier to contest \nthe accuracy of a transaction state.\\n\\n## Floor Price\\n\\nThe lowest recent price at which an \nNFT has been sold, indicating potential market demand.\\n\\n## Fractional \nOwnership\\n\\nOwning a portion of a larger asset, like an NFT, shared among multiple \nindividuals.\\n\\n## Fractionalization\\n\\nDividing an asset into smaller units for fractional \nownership, increasing accessibility and liquidity.\\n\\n## Frontrun\\n\\nTaking advantage of \nknowing about upcoming transactions to profit unfairly in advance.\\n\\n## Finney\\n\\nA unit of \nBitcoin, equivalent to one millionth of a Bitcoin (BTC).\\n\\n## Final, Finality\\n\\nThe confirmation \nand irreversible inclusion of a transaction into a blockchain, ensuring its immutability.\\n\\n## \nFork\\n\\nA branching point in a blockchain where the network splits into two separate chains, \noften due to protocol changes.\\n\\n## Full Node\\n\\nA computer that downloads and stores the \nentire blockchain history, enabling independent verification of transactions.\\n\\n## Faucet\\n\\nA \nsystem that distributes small amounts of cryptocurrency for free, often used for educational or \npromotional purposes.\\n\\n## Fiat Currency\\n\\nTraditional government-issued currency, like the \nUS dollar or Euro.\\n\\n## Fiat-Pegged Cryptocurrency\\n\\nA cryptocurrency whose value is tied to \n\na specific fiat currency, aiming for price stability.\\n\\n## Full Pay-Per-Share (FPPS)\\n\\nA mining \npool reward distribution method where all participating miners receive a share based on their \ncontributed hashrate.\\n\\n## Fully Diluted Valuation\\n\\nFully Diluted ValuationThe total market \ncapitalization of a cryptocurrency if all potential tokens were in circulation.\\n\\n## \nFutures\\n\\nContracts agreeing to buy or sell an asset at a specific price in the future, used for \nspeculation or hedging.\\n\\n## Flappening\\n\\nA hypothetical event where Ethereum's market \ncapitalization surpasses Bitcoin's, based on the ETH and BTC token symbols.\\n\\n## Front \nRunning\\n\\nFront running remains a significant issue in decentralized finance and \ncryptocurrency trading, but ongoing efforts to mitigate its effects are paving the way for a fairer \nand more transparent blockchain ecosystem. By understanding how front running works and \nthe solutions being developed to counter it, users and developers can contribute to the creation \nof a more equitable decentralized financial landscape.\\n\\n## Goblin Town\\n\\nA slang term for \nthe NFT markets during a period of significant decline or bearish sentiment.\\n\\n## Golden \nCross\\n\\nA technical analysis chart pattern indicating a potential trend reversal from bearish to \nbullish.\\n\\n## GM (Good Morning)\\n\\nA common informal greeting used in the crypto \ncommunity, often online.\\n\\n## Gas\\n\\nThe unit used to measure the computational effort \nrequired for transactions on the Ethereum network, influencing transaction fees.\\n\\n## Gear \nNetwork State\\n\\nThe Gear Network is an advanced blockchain system designed to maintain a \ndistributed state, leveraging the power of WebAssembly (Wasm) for runtime code. It stands out \ndue to its capability for forkless runtime upgrades, ensuring that the state is finalized when a \nfinality gadget is employed.\\n\\n## Gas Fee\\n\\nThe amount paid to miners or validators for \nprocessing a transaction on a blockchain, determined by gas used and gas price.\\n\\n## Gasless \nand Signless Transactions\\n\\nGasless and Signless Transactions are pioneering features \nintroduced by the Gear Protocol, aimed at transforming the user experience within \ndecentralized applications (dApps).\\n\\n## Gas Limit\\n\\nThe maximum amount of gas a user is \nwilling to spend for a transaction, preventing accidental high fees.\\n\\n## Gas Price\\n\\nThe \namount a user is willing to pay per unit of gas for their transaction, influencing miners' \nprioritization.\\n\\n## Genesis Block\\n\\nThe first block created on a blockchain, marking its \nstarting point.\\n\\n## Gwei\\n\\nA unit of gas equal to one billionth of an ETH, often used for gas \nprices due to smaller numbers.\\n\\n## GRC-20\\n\\nGRC-20 is a token standard used on the \nGridcoin blockchain, similar to Ethereum's ERC-20 standard.\\n\\n## Graphical Processing Unit \n(GPU)\\n\\nA specialized hardware component often used for mining certain cryptocurrencies \ndue to its processing power.\\n\\n## Gear Protocol\\n\\nGear Protocol is a cutting-edge Substrate-\nbased WebAssembly smart contract platform that streamlines the shift from Web2 to Web3 \ndevelopment. It provides a smooth experience for deploying smart contracts without the need \nto develop a completely new blockchain and users can enjoy the benefits of blockchain \ntechnology and create dApps with ease and efficiency.\\n\\n## GaiaNet Node\\n\\nGaiaNet Nodes \nrepresent a significant advancement in the Web3 ecosystem, offering a decentralized and \ncustomizable approach to AI technology. By enabling individuals and businesses to create, \ndeploy, scale, and monetize AI agents, GaiaNet fosters innovation and empowers users. While \nchallenges remain,\\n\\n## Genesis\\n\\nGenesis in the context of the Sui ecosystem refers to the \nfoundational event that marks the launch of the Sui blockchain. This event includes the creation \nof the genesis block, the very first block in the blockchain, establishing the initial state of the \nnetwork and enabling it to begin processing transactions and smart contracts.\\n\\n## GaiaNet \nDomains\\n\\nGaiaNet domains are the building blocks of a new, decentralized internet. By \nconnecting computers with shared goals, they create a platform for exciting new technologies. \nAs more and more people join GaiaNet, we can expect to see amazing new things \nhappen.\\n\\n## GaiaNet Token\\n\\nThe GaiaNet token is a utility token integral to the GaiaNet \n\necosystem, designed to facilitate transactions, support governance, and foster trust within the \nnetwork. It plays a crucial role in the decentralized infrastructure of GaiaNet, enabling a variety \nof functions that help maintain and grow the network.\\n\\n## Governance\\n\\nAs we navigate the \ntransformative world of Web3, governance stands as a crucial element in shaping decentralized \nnetworks. The integration of smart contracts and consensus algorithms facilitates transparent, \ncommunity-driven decision-making, contrasting sharply with traditional centralized systems. \nOn-chain and off-chain governance models each offer unique strengths, and a hybrid approach \nis increasingly seen as a balanced solution.\\n\\n## General Abstraction\\n\\nGeneral Abstraction \nis a game-changer in the blockchain industry, paving the way for broader adoption by \nsimplifying the user experience. By making blockchain technology more accessible and less \nintimidating, General Abstraction ensures that more people can participate in the Web3 \necosystem, from decentralized finance to digital collectibles and beyond. As projects like Xion \ncontinue to develop and implement General Abstraction, we can expect to see a significant \nincrease in blockchain's popularity and usability, making it a truly mass-market \ntechnology.\\n\\n## Hey Hey Hey\\n\\nA casual greeting sometimes used in the crypto community, \nsimilar to \"gm\" or \"sup.\"\\n\\n## HODL\\n\\nA slang term meaning \"hold on for dear life,\" \nencouraging long-term cryptocurrency investment despite price fluctuations.\\n\\n## Hard \nFork\\n\\nA significant protocol change in a blockchain that creates two incompatible chains, \nrequiring users to choose which version to follow.\\n\\n## Hashgraph\\n\\nA distributed ledger \ntechnology alternative to blockchain, aiming for faster transaction processing and potentially \ndifferent consensus mechanisms.\\n\\n## Hybrid PoW/PoS\\n\\nA consensus mechanism \ncombining Proof-of-Work and Proof-of-Stake, aiming to leverage the strengths of both for \nsecurity and scalability.\\n\\n## Hyperledger\\n\\nAn open-source project providing tools and \nframeworks for building enterprise-grade blockchain applications.\\n\\n## Hash\\n\\nA unique \nidentifier generated from a data block using a cryptographic function, ensuring data integrity \nand tamper-proof records.\\n\\n## Hashrate\\n\\nThe combined computing power used to secure \na blockchain network, influencing mining difficulty and transaction speed.\\n\\n## \nHalving\\n\\nThe periodic reduction of block rewards for miners in certain Proof-of-Work \nblockchains, like Bitcoin.\\n\\n## Hexadecimal\\n\\nA base-16 numeral system using digits 0-9 and \nA-F to represent numbers, commonly used in blockchain addresses and hash values.\\n\\n## \nHard Cap\\n\\nA predetermined maximum supply of tokens that can ever be created for a \ncryptocurrency.\\n\\n## Hardware Wallet\\n\\nA physical device for storing cryptocurrency private \nkeys offline, offering enhanced security compared to software wallets.\\n\\n## HD wallet \n(Hierarchical Deterministic wallet)\\n\\nA type of wallet that generates new addresses from a \nsingle seed phrase, offering improved security and organization compared to basic \nwallets.\\n\\n## Hot Wallet\\n\\nA cryptocurrency wallet connected to the internet, offering \nconvenience but potentially higher security risks compared to cold wallets.\\n\\n## \nHelium\\n\\nHelium is a decentralized blockchain-powered network for Internet of Things (IoT) \ndevices.\\n\\n## Helius\\n\\nIn the bustling world of Solana, a blockchain known for its speed and \nscalability, a name keeps popping up: Helius.\\n\\n## IYKYK (If you know, you know)\\n\\nA phrase \nimplying insider knowledge or understanding of a specific topic, often used in online \ncommunities.\\n\\n## Immutability\\n\\nThe characteristic of blockchain data being unchangeable \nand tamper-proof, ensuring transparency and auditability.\\n\\n## Infura\\n\\nA provider of \ninfrastructure and application programming interfaces (APIs) for interacting with Ethereum and \nother blockchains.\\n\\n## Internal Transaction\\n\\nA transfer of funds within the same smart \ncontract, not involving blockchain transactions.\\n\\n## Interoperability\\n\\nThe ability of different \nblockchain networks to communicate and exchange data with each other, aiming for a more \nconnected ecosystem.\\n\\n## Internet of Things (IoT)\\n\\nNetwork of interconnected devices \n\ncollecting and sharing data, potentially integrated with blockchain technology.\\n\\n## ICO (Initial \nCoin Offering)\\n\\nA fundraising method where a project sells new tokens to the public to raise \ncapital.\\n\\n## Identicon / AddressIdenticon / AddressIcon\\n\\nA visual representation of a \ncryptocurrency address, often used for identification and branding purposes.\\n\\n## IEO (Initial \nExchange Offering)\\n\\nA fundraising method where new tokens are sold directly on a \ncryptocurrency exchange platform.\\n\\n## Impermanent Loss\\n\\nA potential decrease in the \nvalue of assets deposited in DeFi protocols due to price fluctuations, even if the overall \nunderlying asset value remains the same.\\n\\n## InterPlanetary File System (IPFS)\\n\\nA \ndecentralized peer-to-peer file storage system aiming for efficient and censorship-resistant \ndata storage.\\n\\n## IPO (Initial Public Offering)\\n\\nThe traditional process of a company selling \nshares to the public for the first time on a stock exchange, not directly related to \ncryptocurrency.\\n\\n## Intra-Validator Sharding\\n\\nIntra-Validator Sharding is a cutting-edge \napproach in blockchain technology designed to enhance the efficiency and scalability of \nnetworks. Unlike traditional sharding, which divides the entire blockchain into smaller, more \nmanageable pieces called shards, Intra-Validator Sharding focuses on optimizing the \nperformance within a single validator. This technique allows validators to process multiple \ntransactions simultaneously, increasing throughput and reducing latency.\\n\\n## JSON-RPC \n(JavaScript Object Notation Remote Procedure Call)\\n\\nA protocol for remote procedure calls \nusing JSON format, commonly used for interacting with blockchain applications.\\n\\n## Know \nYour Customer (KYC)\\n\\nRegulations requiring financial institutions to verify the identity of their \ncustomers, often applied to cryptocurrency exchanges and platforms.\\n\\n## Keystore file\\n\\nA \nfile containing encrypted private keys used to access cryptocurrency wallets, requiring a \npassword for decryption.\\n\\n## Kimchi Premium\\n\\nThe difference in cryptocurrency prices \nbetween South Korea and other markets, historically favoring higher prices in Korea.\\n\\n## \nLFG\\n\\n\"LFG\" is an acronym popularly used in various online communities, including the \ncryptocurrency and gaming worlds.\\n\\n## Layer 2\\n\\nScaling solutions built on top of a main \nblockchain to process transactions faster and cheaper, like rollups and sidechains.\\n\\n## \nLedger\\n\\nA distributed database recording all transactions on a blockchain network, ensuring \ntransparency and immutability.\\n\\n## Light Client\\n\\nA software wallet that doesn't download \nthe entire blockchain but relies on trusted nodes for verification, requiring less storage \nspace.\\n\\n## Lightning Network\\n\\nA payment network built on top of Bitcoin enabling fast and \nlow-cost microtransactions.\\n\\n## Limit Order / Limit Buy / Limit Sell\\n\\nOrders to buy or sell \ncryptocurrency at a specific price point, executed only if the market price reaches that \nlevel.\\n\\n## Liquid Democracy (Delegative Democracy)\\n\\nA governance model where token \nholders delegate their voting power to elected representatives.\\n\\n## Liquid Proof of Stake \n(LPoS)\\n\\nA variation of Proof-of-Stake where staked tokens remain liquid and tradable.\\n\\n## \nLinea\\n\\nLinea Network stands out as a highly promising Layer-2 solution.\\n\\n## \nLeverage\\n\\nUsing borrowed funds to amplify potential returns or losses in cryptocurrency \ntrading, increasing risk.\\n\\n## Liquidity\\n\\nThe ease with which an asset can be bought or sold \nwithout impacting its price significantly.\\n\\n## Lamport\\n\\nIn Solana, \"Lamport\" often refers \nnot directly to Lamport signatures but to a unit of measure within the blockchain's \necosystem.\\n\\n## LLM\\n\\nLLMs represent a significant leap forward in AI technology, offering \npowerful capabilities for interpreting and generating human language. In the Web3 ecosystem, \nthey enhance decentralization, improve smart contract development, and provide valuable \ninsights from blockchain data. While challenges remain, the potential of LLMs to transform \nvarious industries is undeniable.\\n\\n## Money Printer Go Brrr\\n\\nA slang term criticizing \nexcessive money printing by central banks, sometimes applied to inflationary \ncryptocurrencies.\\n\\n## Mooning\\n\\nA slang term expressing a desire for a rapid and significant \n\nprice increase in a cryptocurrency.\\n\\n## Metadata\\n\\nAdditional information attached to an \nNFT or other digital asset, providing context or attributes.\\n\\n## Mineable\\n\\nCryptocurrencies \nthat can be created through a process called mining, often involving solving cryptographic \npuzzles.\\n\\n## Mnemonics\\n\\nTechniques for aiding memory by using associations and \nmemorable phrases.\\n\\n## Message Automation\\n\\nMessage Automation is a groundbreaking \nfeature introduced in various blockchain protocols, aiming to streamline and optimize \ninteractions within decentralized applications (dApps).\\n\\n## Mainnet\\n\\nThe live and public \nversion of a blockchain network, as opposed to testnets used for development and \ntesting.\\n\\n## Mint\\n\\nThe process of creating new NFTs or tokens on a blockchain.\\n\\n## \nMultisignature (multi-signature)\\n\\nA security feature requiring multiple private keys to \nauthorize a transaction, enhancing security.\\n\\n## Miners\\n\\nIndividuals or pools who verify \ntransactions and compete to create new blocks on Proof-of-Work blockchains, earning \nrewards.\\n\\n## Mining\\n\\nThe process of securing a blockchain network and creating new \ntokens through solving computational problems.\\n\\n## Metaverse\\n\\nA collective term for \nimmersive virtual worlds and experiences, potentially integrated with blockchain \ntechnology.\\n\\n## Margin Trading\\n\\nMargin TradingTrading borrowed funds to magnify \npotential profits (and losses) with higher risk.\\n\\n## Market Maker\\n\\nA firm or individual who \nactively quotes both buy and sell prices for a specific asset, aiming to maintain liquidity and \nfacilitate trading.\\n\\n## Market Order / Market Buy / Market Sell\\n\\nOrders to buy or sell an \nasset at the best available market price, executed immediately based on current offers.\\n\\n## \nMasternodes\\n\\nSpecialized nodes in some blockchains with additional functionalities and \nrewards, often requiring collateral deposits.\\n\\n## Maximal Extractable Value (MEV)\\n\\nThe \nmaximum profit that can be extracted from a specific blockchain block, sometimes influencing \nblock production and transaction fees.\\n\\n## MetaMask\\n\\nA popular cryptocurrency wallet \nsoftware for interacting with Ethereum and other dApps.\\n\\n## Merkle Tree\\n\\nA data structure \nefficiently verifying the integrity of transactions in a blockchain by generating unique hashes for \neach block.\\n\\n## Mesh\\n\\nA network architecture where devices connect directly with each \nother, potentially used in some blockchain systems.\\n\\n## MicroBitcoin (uBTC)\\n\\nOne \nmillionth of a Bitcoin (BTC), a smaller unit for easier transactions and price \nrepresentation.\\n\\n## Microtransaction\\n\\nA very small financial transaction, potentially \nfacilitated by efficient blockchain technologies.\\n\\n## Mining Contract\\n\\nA smart contract \ndefining the rules and rewards for mining on a blockchain.\\n\\n## Mining Pool\\n\\nA group of \nminers who combine their computing power to increase their chances of earning \nrewards.\\n\\n## Mining Reward\\n\\nThe incentive given to miners for verifying transactions and \ncreating new blocks on a blockchain.\\n\\n## Mining Rig\\n\\nSpecialized hardware setup \noptimized for mining cryptocurrency, often with high computing power.\\n\\n## Mnemonic \nPhrase\\n\\nA series of random words used to back up and recover private keys in cryptocurrency \nwallets.\\n\\n## Modular Blockchain\\n\\nA blockchain architecture where different components \ncan be interchangeable for greater flexibility and scalability.\\n\\n## Mt. Gox\\n\\nA defunct \ncryptocurrency exchange that suffered a major hack in 2014, impacting the price of \nBitcoin.\\n\\n## Multi-signature wallet (multisig)\\n\\nA cryptocurrency wallet requiring multiple \nsignatures for transactions, offering increased security.\\n\\n## Market Cap (Market \nCapitalization)\\n\\nThe total value of all outstanding tokens in circulation, calculated by \nmultiplying the token\\n\\n## Market Taker\\n\\nSomeone who places market orders, fulfilling the \norders of market makers and providing liquidity.\\n\\n## Mempool\\n\\nThe Telos Arbitration \nOrganization (TAO) is a formalized arbitration body on the Telos blockchain.\\n\\n## Meta \nAccounts\\n\\nXION’s Meta Accounts framework is a game-changer in the realm of blockchain \ntechnology. By redefining how accounts are managed and secured, XION not only addresses the \n\nchallenges of key management but also sets a new standard for user experience in the \ndecentralized world. With its modular design, advanced security features, and commitment to \naccessibility, Meta Accounts pave the way for a more secure, user-friendly, and inclusive \nblockchain ecosystem.\\n\\n## NGMI (not gonna make it)\\n\\nA slang term suggesting someone is \nunlikely to succeed in the crypto market.\\n\\n## Nominated Proof-of-Stake \n(NPoS)\\n\\nNominated Proof-of-Stake (NPoS) is a consensus mechanism designed to secure \nblockchain networks by leveraging the power of stakeholder participation.\\n\\n## Nonce\\n\\nA \nrandom number used in cryptocurrency mining to create unique block hashes, preventing \nmanipulation.\\n\\n## Non-custodial\\n\\nWallets where users hold their own private keys and \nhave complete control over their assets, unlike custodial wallets.\\n\\n## NFT (Non-Fungible \nToken)\\n\\nA unique digital asset on a blockchain representing ownership of a specific item, \noften used for art, collectibles, or in-game items.\\n\\n## NFT Marketplace\\n\\nAn NFT \nmarketplace is an online platform that facilitates the buying, selling, and trading of non-fungible \ntokens (NFTs).\\n\\n## NFT Aggregator\\n\\nA platform that collects and displays information \nabout NFTs from various marketplaces.\\n\\n## Nodeo\\n\\nNodeos is a fundamental component \nof blockchain networks, providing essential services for block production, transaction \nvalidation, and smart contract execution. By understanding and leveraging nodeos, developers \nand stakeholders can enhance the functionality and reliability of decentralized applications and \nservices, driving innovation in the Web3 space.\\n\\n## Node\\n\\nBlockchain nodes are the \ncornerstone of decentralized networks, enabling trustless, transparent, and secure blockchain \noperations. As the blockchain ecosystem continues to evolve and expand into new \napplications, nodes will play an increasingly important role in ensuring the scalability and \nsecurity of these systems. While running a node can be resource-intensive, advances in \nblockchain technology aim to reduce these burdens, making node participation more \naccessible for users. The future of blockchain nodes looks promising as they continue to \nsupport the decentralized infrastructure of Web3.\\n\\n## OpenSea\\n\\nA popular marketplace \nfor buying and selling NFTs.\\n\\n## Ommer Block\\n\\nA valid block temporarily excluded from the \nmain chain due to limitations, later potentially included.\\n\\n## Off-Chain Attestation\\n\\nOff-\nchain attestation refers to attestations that are performed outside the blockchain but can be \nlinked to blockchain technology for additional security and verification capabilities.\\n\\n## Off-\nchain\\n\\nActivities or data existing outside the main blockchain, potentially linked through on-\nchain transactions.\\n\\n## On-chain\\n\\nActivities or data directly recorded on the main \nblockchain, transparent and verifiable.\\n\\n## Oracle\\n\\nAn entity providing external data feeds \nto blockchain networks, bridging the gap between on-chain and off-chain information.\\n\\n## \nOffline Staking\\n\\nStaking cryptocurrency while keeping the tokens in a secure cold wallet, not \nconnected to the internet.\\n\\n## On-ramp, Off-ramp\\n\\nMethods for converting fiat currency to \ncryptocurrency (on-ramp) or vice versa (off-ramp).\\n\\n## Open Source\\n\\nSoftware with \npublicly available source code that can be freely used, modified, and distributed.\\n\\n## \nOptimistic Machine Learning (opML)\\n\\nA type of Machine Learning where transactions are \nassumed to be valid initially and only later challenged if found fraudulent, aiming for faster \nprocessing on Layer 2 solutions.\\n\\n## Optimistic Rollup\\n\\nA Layer 2 scaling solution for \nEthereum that bundles transactions off-chain, verifies them optimistically, and includes them \non the main chain if valid, offering faster and cheaper transactions.\\n\\n## Option\\n\\nA contract \ngiving the buyer the right, but not the obligation, to buy or sell an asset at a specific price by a \ncertain date.\\n\\n## Order Book\\n\\nA list of buy and sell orders for an asset at different prices, \nused for matching orders in exchanges.\\n\\n## Over The Counter (OTC)\\n\\nTrading directly \nbetween two parties without using an exchange, often for larger transactions.\\n\\n## On-Chain \nAttestation\\n\\nOn-chain attestation involves storing these attestations directly on the Ethereum \n\nblockchain, ensuring they are immutable and benefit from the blockchain's security and \ndecentralization.\\n\\n## Open/Close\\n\\nOrders to open or close a leveraged trading position, \nentering or exiting a trade.\\n\\n## Object-Centric Data Model\\n\\nThe Object-Centric Data Model \nis a transformative approach in the Web3 space, offering a novel way to manage and interact \nwith data on the blockchain. By emphasizing unique, addressable objects, this model provides \nenhanced flexibility, scalability, and security for decentralized applications. As the Web3 \necosystem continues to evolve, the Object-Centric Data Model will play a crucial role in shaping \nthe future of blockchain technology and its applications.\\n\\n## Objects\\n\\nIn the context of the \nSui blockchain, objects are the fundamental units of data storage and asset representation. \nUnlike traditional blockchains that store assets within user accounts or smart contract \naccounts, Sui uses an object-centric data model. This innovative approach redefines digital \nasset ownership by allowing objects to be independently defined, created, and managed by \ndevelopers, with distinct attributes including ownership, stored directly on-chain.\\n\\n## Open \nCampus ID (OCID)\\n\\nOpen Campus ID is a transformative addition to the Web3 ecosystem, \noffering a secure, efficient, and scalable platform for decentralized identities. By leveraging \nOCID, learners, institutions, and developers can unlock new opportunities and drive innovation \nin the educational landscape.\\n\\n## OC Genesis NFT\\n\\nGenesis NFTs are more than just \ndigital collectibles; they represent the birth of a project and its early supporters. By \nunderstanding the significance and potential benefits of owning these inaugural tokens, you can \nnavigate the Web3 space with greater confidence and insight. Whether you're a collector, \ninvestor, or enthusiast, Genesis NFTs offer a unique opportunity to be part of blockchain \nhistory.\\n\\n## OC Alliance\\n\\nThe Open Campus Alliance represents a pioneering effort in \nintegrating blockchain technology and cryptocurrencies into the education sector. By leveraging \nthe power of $EDU and partnerships with over 30 educational entities, including BitDegree and \nBlockchain Center, Open Campus is creating a decentralized, accessible, and inclusive learning \nenvironment. The integration of $EDU with Binance Pay further enhances the global reach and \nusability of digital currencies in education. With initiatives like the $10 million Edtech \naccelerator, Open Campus is set to transform the educational landscape, making high-quality \neducation more connected, secure, and attainable for learners worldwide.\\n\\n## OC Developer \nEcosystem Fund\\n\\nThe OC Developer Ecosystem Fund is a pioneering initiative by Open \nCampus to establish EDU Chain as the leading blockchain platform for education. By providing \nsubstantial incentives and fostering a sustainable ecosystem, Open Campus aims to \nrevolutionize decentralized education and drive long-term growth. With strategic resource \nallocation, the fund is set to create a vibrant, self-sustaining ecosystem benefiting developers, \neducators, and the broader community.\\n\\n## OC DAO\\n\\nOpen Campus DAO envisions a \ndecentralized education system that promotes accessibility, diversity, and inclusivity. By \nleveraging blockchain technology and community-driven governance, the DAO aims to \nempower educators and learners, ensuring that high-quality education is accessible to \neveryone, regardless of geographical or financial barriers. The vision is to create an educational \necosystem that fosters innovation, transparency, and collaboration, ultimately transforming the \nway education is delivered and consumed globally.\\n\\n## OC University\\n\\nOpen Campus U, \npowered by KIP Protocol and the EDU Chain, is poised to revolutionize tertiary education. By \nintegrating advanced AI features and blockchain technology, OCU provides:\\n\\n## Open \nCampus Proposal (OCP)\\n\\nThe Open Campus Proposal process is a vital component of the \nOpen Campus DAO, empowering the community to actively participate in shaping the future of \nthe ecosystem. By understanding the submission process, proposal structure, and voting \nmechanisms, EDU token holders can effectively contribute to the growth and governance of the \nOpen Campus Protocol.\\n\\n## Open Campus Incubator (OC-I)\\n\\nIf you’re ready to innovate on \n\nthe EDU Chain and want to take advantage of the resources and opportunities offered by OC-I, \nnow is the time to get started.\\n\\n## Ponzi Scheme\\n\\nA fraudulent investment scheme that \npays returns to investors using funds from new investors, ultimately unsustainable.\\n\\n## Pump \nand Dump Scheme\\n\\nA manipulative scheme to artificially inflate the price of an asset through \ncoordinated buying and then selling at a profit, harming other investors.\\n\\n## PFP (profile \npicture)\\n\\nNFTs often used as avatars or profile pictures in online communities.\\n\\n## P2E \n(play-to-earn)\\n\\nGames where players can earn cryptocurrency or NFTs through gameplay, \npotentially blurring the line between gaming and work.\\n\\n## Program\\n\\nIn Solana, a \n\"program\" is essentially what other blockchain platforms refer to as smart contracts.\\n\\n## \nPoA, PoS, PoW\\n\\nAcronyms for different consensus mechanisms used in blockchains\\n\\n## \nParity\\n\\nIn some blockchains, the state where two or more nodes have the same copy of the \nledger, ensuring network consistency.\\n\\n## Pay-Per-Last N Shares (PPLNS)\\n\\nA mining pool \nreward distribution method where miners are rewarded based on their contributed hashrate \nduring the most recent N blocks.\\n\\n## Pay-Per-Share (PPS)\\n\\nA mining pool reward \ndistribution method where miners receive a fixed reward for each valid share submitted, \nregardless of block discovery.\\n\\n## Permissioned Blockchain\\n\\nA blockchain with restricted \naccess and participation, often used for enterprise applications requiring controlled \nenvironments.\\n\\n## Permissioned Ledger\\n\\nA distributed ledger with restricted access and \nparticipation, similar to a permissioned blockchain.\\n\\n## PoS/PoW Hybrid\\n\\nA blockchain \nusing a combination of Proof-of-Stake and Proof-of-Work consensus mechanisms, potentially \nleveraging the benefits of both.\\n\\n## Proof of Authority (PoA)\\n\\nA consensus mechanism \nwhere trusted entities validate transactions, used in permissioned blockchains.\\n\\n## Proof of \nWork (PoW)\\n\\nA consensus mechanism where miners solve cryptographic puzzles to validate \ntransactions and secure the network, requiring significant computational power.\\n\\n## \nProtocol\\n\\nThe set of rules and procedures governing how a blockchain network \noperates.\\n\\n## Persistent Memory\\n\\nPersistent Memory (PM) refers to a type of non-volatile \nmemory that retains data even when power is lost, bridging the gap between traditional volatile \nmemory (RAM) and long-term storage (hard drives or SSDs).\\n\\n## Private Blockchain\\n\\nA \nblockchain with restricted access and participation, used for specific organizations or \napplications.\\n\\n## Public Blockchain\\n\\nA blockchain with open access and participation, \nanyone can join and verify transactions.\\n\\n## Public Key\\n\\nA cryptographic key used to \nencrypt messages or verify signatures, paired with a private key for security.\\n\\n## Private Data \nAttestation\\n\\nPrivate Data Attestation leverages the cryptographic structure of Merkle Trees to \nselectively reveal specific data fields while safeguarding the privacy of the entire dataset.\\n\\n## \nP2P (peer-to-peer)\\n\\nDirect interaction between individuals without intermediaries, like in \ndecentralized networks.\\n\\n## Plasma\\n\\nA Layer 2 scaling solution for Ethereum that uses \nsidechains to process transactions off-chain and commit them to the main chain in batches, \naiming for scalability.\\n\\n## Portfolio\\n\\nA collection of cryptocurrency or other digital assets \nheld by an individual or organization.\\n\\n## Pre-sale\\n\\nAn event where tokens are sold to \ncertain individuals or groups before they are publicly available, often at a discounted \nprice.\\n\\n## Privacy Coins\\n\\nCryptocurrencies with enhanced privacy features like mixing or \nzero-knowledge proofs, aiming to obfuscate transaction details.\\n\\n## Private Currency\\n\\nA \ndigital currency not issued by a central authority, similar to cryptocurrency but potentially with \nmore restrictions.\\n\\n## Private Key\\n\\nA cryptographic key used to access and spend \ncryptocurrency from a wallet, requiring secure storage and protection.\\n\\n## Proof of Stake \n(PoS)\\n\\nA consensus mechanism where validators stake cryptocurrency to secure the network \nand earn rewards, aiming for energy efficiency compared to PoW.\\n\\n## Proof of \nHistory\\n\\nProof of History is not a consensus mechanism in the traditional sense but rather a \n\nnovel approach invented by Solana to enhance the efficiency of its blockchain.\\n\\n## \nPhantom\\n\\nPhantom is a digital wallet specifically designed for the Solana ecosystem, offering \na user-friendly interface for managing cryptocurrencies, non-fungible tokens (NFTs), and \ninteractions with decentralized applications (DApps).\\n\\n## Programmable Transaction Blocks \n(PTBs)\\n\\nProgrammable Transaction Blocks (PTBs) are a novel approach to transactions on the \nSui blockchain, significantly enhancing the flexibility and functionality of traditional blockchain \ntransactions. Unlike basic records of asset flows, PTBs allow users to compose transactions \nwith multiple commands that execute on inputs, defining the transaction's outcome in a single, \natomic operation.\\n\\n## Prompt\\n\\nA prompt in the context of artificial intelligence (AI) and \nmachine learning (ML) refers to the initial input or instruction given to a model to generate a \nresponse. Prompts guide the behavior and responses of AI models, especially in conversational \ninterfaces, programming assistants, and various other applications. In the GaiaNet network, \nprompts are critical for customizing and optimizing the performance of AI agents.\\n\\n## \nPublisher NFTs\\n\\nPublisher NFTs represent a transformative innovation in the intersection of \nblockchain technology and education. By enabling the tokenization of educational content, \nthese NFTs empower creators to monetize their work, foster collaboration with co-publishers, \nand create a new economic model for the education sector. As the Web3 ecosystem continues \nto evolve, Publisher NFTs will play a crucial role in shaping the future of education, ensuring that \ncontent creators are fairly compensated and that educational\\n\\n## pNFT Staking\\n\\npNFT \nStaking represents a significant advancement in the Web3 ecosystem, particularly in the realm \nof educational content ownership. By enabling co-publishers to boost their revenue share \nthrough strategic staking, this program not only enhances the value of Publisher NFTs but also \nstrengthens the connection between content creators, co-publishers, and the broader \ncommunity.\\n\\n## Parameterized Fee Layer\\n\\nThe Parameterized Fee Layer is a game-changer \nin blockchain technology, offering a more user-friendly, flexible, and accessible approach to fee \nmanagement. By abstracting away the complexities of traditional gas fees and enabling \ntransactions in widely accepted tokens like USDC, XION is setting a new standard for how \nblockchain networks operate. This innovation not only enhances the current user experience \nbut also lays the groundwork for broader adoption of blockchain technology, making it more \ninclusive and accessible for everyone.\\n\\n## PWA\\n\\nProgressive Web Apps represent a \nsignificant advancement in how users interact with web-based platforms, and XION’s adoption \nof PWA technology showcases its commitment to providing a superior, user-friendly experience \nin the blockchain space. By integrating PWAs, XION not only enhances accessibility and \nsecurity but also ensures that its platform remains at the forefront of blockchain innovation, \noffering users a seamless and engaging experience across all devices.\\n\\n## QR Code\\n\\nA \ntwo-dimensional barcode containing information, often used for quick access to \ncryptocurrency addresses or websites.\\n\\n## Rollups\\n\\nLayer 2 scaling solutions that bundle \ntransactions off-chain, verify them using cryptographic proofs, and commit them to the main \nchain in batches, offering scalability and cost reduction.\\n\\n## Rug Pull\\n\\nA fraudulent \nscheme where developers abandon a project and abscond with investor funds after raising \ncapital through token sales.\\n\\n## Rarity\\n\\nThe relative scarcity of an NFT or other digital \nasset, influencing its value and desirability\\n\\n## Royalties\\n\\nA percentage of secondary sales \nproceeds automatically paid to the original creator of an NFT, providing ongoing revenue \nstreams.\\n\\n## ROI (Return on Investment)\\n\\nThe percentage return on an investment, taking \ninto account both profits and losses.\\n\\n## Rekt\\n\\nIn the cryptocurrency community, \"rekt\" is \na slang term derived from the word \"wrecked.\\n\\n## Replay Attack\\n\\nAn attempt to reuse a \nvalid transaction from one blockchain on another blockchain where it may also be valid, \npotentially leading to unintended consequences like double spending.\\n\\n## RPC (Remote \n\nProcedure Call)\\n\\nA protocol for making remote procedure calls, often used for interacting \nwith blockchain applications through APIs.\\n\\n## Revocation\\n\\nRevocation refers to the \nprocess of marking an attestation as invalid. Attestations are statements or assertions certified \nby a party (the attestor), and revocation is necessary when these are no longer accurate or \nvalid.\\n\\n## Relative Strength Index (RSI)\\n\\nA technical analysis indicator used to assess the \nstrength of price movements in an asset.\\n\\n## Relayer\\n\\nIn Layer 2 solutions, entities \nresponsible for communicating between the main chain and the Layer 2, relaying transactions \nand proofs.\\n\\n## Ring Signature\\n\\nA cryptographic technique where multiple users sign a \nmessage, making it impossible to identify the specific signer while proving its \nauthenticity.\\n\\n## Resolver\\n\\nIn the realm of Web3, a resolver is a fundamental component \ndesigned to connect human-readable domain names with machine-readable identifiers, such \nas blockchain addresses.\\n\\n## Rust\\n\\nDeveloped by Mozilla Research, Rust is a relatively \nyoung programming language (first released in 2015) designed with a focus on memory safety, \nperformance, and concurrency.\\n\\n## Shill\\n\\n\"SHILL\" in crypto is someone promoting assets \ncovertly for manipulation or hype.\\n\\n## Shitcoin\\n\\nA derogatory term for a cryptocurrency \nperceived to have little value or utility.\\n\\n## Super Staker\\n\\nA group of individuals or a service \nthat combines their staking power to increase their chances of earning rewards on a Proof-of-\nStake blockchain.\\n\\n## Satoshi\\n\\nThe smallest unit of Bitcoin (BTC), equal to one hundred \nmillionth of a Bitcoin (0.00000001 BTC).\\n\\n## Szabo\\n\\nA unit of digital currency equal to one \nmillionth of a Bitcoin (0.000001 BTC).\\n\\n## Sell wall\\n\\nA large order to sell an asset at a \nspecific price point, potentially creating downward pressure on the market.\\n\\n## \nSerenity\\n\\nThe upgraded name for the Cardano blockchain after several development \nphases.\\n\\n## State Transition\\n\\nState Transition is a refers to the process by which the state \nof a blockchain changes in response to transactions.\\n\\n## Serialization\\n\\nThe process of \nconverting data into a sequential format for storage or transmission.\\n\\n## Soft Cap\\n\\nA \nminimum fundraising goal in a token sale, if not reached, the project may need to adjust its \nplans or return funds to investors.\\n\\n## Self-executing\\n\\nSmart contracts that automatically \nexecute predefined actions upon meeting certain conditions, eliminating the need for manual \nintervention.\\n\\n## Second-Layer Solutions\\n\\nProtocols built on top of existing blockchains to \naddress scalability limitations by processing transactions off-chain, offering faster and cheaper \ntransactions.\\n\\n## Segregated Witness (SegWit)\\n\\nA Bitcoin protocol upgrade that separates \ntransaction signatures from other data, enabling increased block capacity and efficiency.\\n\\n## \nSharding\\n\\nA scaling technique that divides a blockchain into smaller partitions (shards), \nallowing parallel processing of transactions and potentially increasing throughput.\\n\\n## Side \nChain\\n\\nA separate blockchain connected to a main chain, potentially used for specific \nfunctionalities or scalability purposes.\\n\\n## Slashing Condition\\n\\nA specific rule in Proof-of-\nStake blockchains where validators can be penalized for misbehavior, losing some or all of their \nstaked tokens.\\n\\n## Slot\\n\\nA specific time period in a blockchain where a new block can be \ncreated, often used in Proof-of-Stake consensus mechanisms.\\n\\n## Soft Fork\\n\\nA change to \na blockchain protocol that is backward compatible, meaning older nodes can still process \ntransactions from newer nodes.\\n\\n## Software Development Kit (SDK)\\n\\nA collection of tools \nand libraries for developers to build applications on a specific blockchain platform.\\n\\n## \nSolidity\\n\\nA high-level programming language for writing smart contracts on the Ethereum \nblockchain.\\n\\n## SubQuery Overview\\n\\nSubQuery is a decentralized data indexing protocol \ndesigned for blockchain applications, enabling developers to query and extract blockchain data \nefficiently.\\n\\n## SHA-256\\n\\nA cryptographic hash function widely used in blockchain \napplications, generating unique and fixed-size outputs from arbitrary data.\\n\\n## Satoshi \nNakamoto\\n\\nThe pseudonymous individual or group who created Bitcoin, their true identity \n\nremains unknown.\\n\\n## Scalability\\n\\nThe ability of a blockchain network to handle increasing \ntransaction volume and user activity without significant performance degradation.\\n\\n## Smart \nContract\\n\\nA self-executing program stored on a blockchain that automatically executes \npredefined terms of an agreement when certain conditions are met.\\n\\n## Sequencer\\n\\nA \nsequencer in the crypto world is a component that orders transactions within Layer 2 solutions, \nsuch as Optimistic Rollups or zk-Rollups.\\n\\n## Substrate\\n\\nSubstrate is a modular, flexible \nframework for building custom blockchains.\\n\\n## Schema\\n\\nIn Web3, a \"schema\" serves as a \nstructured data model that outlines how data is organized within blockchain \napplications.\\n\\n## Salt (cryptography)\\n\\nRandom data added to cryptographic processes to \nprevent predictable outputs and enhance security.\\n\\n## Scrypt\\n\\nA memory-hard hashing \nalgorithm used in some cryptocurrencies like Litecoin, making it more resistant to ASIC mining \ncompared to SHA-256.\\n\\n## Secondary Market\\n\\nThe market where previously issued tokens \nor NFTs are traded between individuals or platforms, not involving their initial creators.\\n\\n## \nSecure Asset Fund for Users (SAFU)\\n\\nA fund established by some cryptocurrency exchanges \nto protect user assets in case of hacks or security breaches.\\n\\n## Securities and Exchange \nCommission (SEC)\\n\\nA US government agency responsible for regulating securities markets, \nincluding potential oversight of some cryptocurrency activities.\\n\\n## Seed (phrase)\\n\\nA \nrandom sequence of words used to generate private keys in cryptocurrency wallets, requiring \nsecure storage and backup.\\n\\n## Sim Swapping\\n\\nA fraudulent scheme where attackers gain \ncontrol of a phone number to intercept communication and potentially steal cryptocurrency or \nother digital assets.\\n\\n## Supply\\n\\nThe total amount of tokens or coins in circulation for a \nspecific cryptocurrency.\\n\\n## Swap\\n\\nExchanging one cryptocurrency for another, similar to \nforeign exchange trading.\\n\\n## Solana\\n\\nSOL is the native cryptocurrency of the Solana \nblockchain. It plays a pivotal role in maintaining and operating the Solana network and can be \nused for a variety of purposes\\n\\n## SPL (Solana Program Library)\\n\\nThe Solana Program \nLibrary (SPL) is akin to a standard library in traditional programming languages but tailored for \nthe Solana blockchain.\\n\\n## Simple Transactions\\n\\nSimple Transactions represent a \nstreamlined approach to processing transactions on the blockchain. In contrast to traditional \nblockchains, which often batch transactions into blocks, Simple Transactions are processed \nindividually. This methodology aims to reduce latency and increase efficiency by validating each \ntransaction on its own merits, rather than as part of a larger set. The result is quicker transaction \nfinality and a more responsive blockchain network.\\n\\n## Seed Node\\n\\nSeed nodes are \nindispensable for maintaining the connectivity and scalability of blockchain networks. By \nproviding essential peer discovery services, they enable new nodes to easily join and \nsynchronize with the network. As blockchain adoption continues to grow, seed nodes will \nremain a key component in ensuring the resilience and accessibility of decentralized \nsystems.\\n\\n## Signature Abstraction\\n\\nSignature Abstraction in XION Blockchain represents \na significant advancement in transaction authentication, offering flexibility, security, and \nadaptability. By supporting various cryptographic curves and authentication methods, XION \nsets a new standard for blockchain technology, ensuring it remains relevant and robust as the \ncrypto landscape evolves.\\n\\n## Token Burn\\n\\nThe intentional removal of tokens from \ncirculation, potentially reducing supply and increasing scarcity.\\n\\n## Tensor\\n\\nTensor boasts \nof being one of the fastest NFT trading platforms on Solana. This translates to quicker \ntransactions and potentially smoother experiences for users.\\n\\n## Telos EVM (tEVM)\\n\\nTelos \nEVM (tEVM) is a non-Ethereum fork of the Ethereum Virtual Machine (EVM).\\n\\n## Tangle\\n\\nThe \ndata structure used by the IOTA blockchain, where transactions validate each other, aiming for \nscalability and low fees.\\n\\n## Testnet\\n\\nA testing environment for blockchain applications \nand smart contracts, separate from the mainnet.\\n\\n## Testnet Kovan\\n\\nA popular Ethereum \n\ntestnet for developers.\\n\\n## Testnet Rinkeby\\n\\nAnother popular Ethereum testnet for \ndevelopers.\\n\\n## Testnet Ropsten\\n\\nAnother popular Ethereum testnet for developers.\\n\\n## \nTrustless\\n\\nA system where participants interact without the need for a central authority, \nrelying on the blockchain for trust and verification.\\n\\n## Turing-Complete\\n\\nA system capable \nof performing any computation, allowing for complex functionality in smart contracts.\\n\\n## \nTelos Zero\\n\\nTelos Zero is the native consensus layer of the Telos blockchain, built to support \nthe development of new blockchains and decentralized applications (dApps).\\n\\n## Token\\n\\nA \ndigital asset built on top of a blockchain, often representing specific functionalities or \nrights.\\n\\n## The Ethereum Attestation Service (EAS)\\n\\nThe Ethereum Attestation Service \n(EAS) is an open-source framework on the Ethereum blockchain designed to facilitate the \ncreation, management, and verification of digital attestations.\\n\\n## Tether (USDT)\\n\\nA \nstablecoin pegged to the US dollar, aiming to maintain a constant value despite cryptocurrency \nprice fluctuations.\\n\\n## Ticker\\n\\nA short abbreviation used to identify a specific \ncryptocurrency on exchanges and markets.\\n\\n## Token Generation Event (TGE)\\n\\nThe \nmoment when a token is initially created and distributed, often through a token sale or other \nmechanisms.\\n\\n## Total Supply\\n\\nThe total number of tokens that will ever be created for a \nspecific cryptocurrency.\\n\\n## Total Value Locked (TVL)\\n\\nThe total amount of cryptocurrency \nlocked in smart contracts or DeFi protocols, indicating the market cap and potential locked \nvalue.\\n\\n## Trading Volume\\n\\nThe total amount of a cryptocurrency traded within a specific \ntimeframe.\\n\\n## Transaction Block\\n\\nA group of transactions bundled together and added to \nthe blockchain as a single unit.\\n\\n## Transaction Fee\\n\\nA fee paid to miners or validators for \nprocessing a transaction on the blockchain.\\n\\n## Transaction Pool\\n\\nA temporary holding \narea for pending transactions waiting to be included in a block on the blockchain.\\n\\n## \nTransactions Per Second (TPS)\\n\\nThe number of transactions a blockchain network can \nprocess per second, a key metric for scalability.\\n\\n## TPS (Transactions Per \nSecond)\\n\\nTransactions Per Second (TPS) is a crucial metric for blockchain networks, \nindicating the number of transactions a blockchain can process in one second.\\n\\n## Telos \nArbitration Organisation\\n\\nThe Telos Arbitration Organization (TAO) is a formalized arbitration \nbody on the Telos blockchain.\\n\\n## Telos Decide\\n\\nTelos Decide is a transformative addition \nto the Web3 ecosystem, offering a comprehensive platform for decentralized governance. By \nunderstanding and leveraging Telos Decide, developers and stakeholders can enhance the \nfunctionality and transparency of decentralized applications and services, driving innovation in \nthe decentralized world.\\n\\n## Telos (TLOS)\\n\\nTelos (TLOS) is a powerful and innovative \nblockchain platform that addresses the scalability and cost challenges faced by other networks. \nWith its high throughput, low transaction fees, and energy-efficient consensus model, Telos is \npositioned to drive the future of decentralized applications and finance. Its EVM compatibility \nfurther enhances its appeal, making it a critical player in the rapidly evolving blockchain space. \nAs the ecosystem grows, Telos is set to become a leading platform for sustainable and efficient \nWeb3 solutions.\\n\\n## UTC Time\\n\\nCoordinated Universal Time, the primary time standard \nused for international timekeeping.\\n\\n## Unspent Transaction Output (UTXO)\\n\\nA portion of \ncryptocurrency remaining after a transaction, available for future spending.\\n\\n## USD Coin \n(USDC)\\n\\nAnother popular stablecoin pegged to the US dollar.\\n\\n## Utility\\n\\nThe practical \nuse case or functionality offered by a token or cryptocurrency.\\n\\n## Utility Token\\n\\nA token \nthat grants access to a specific service or application on a blockchain platform\\n\\n## Venture \nCapital (VC)\\n\\nFirms that invest in high-growth companies, including some blockchain \nstartups.\\n\\n## Vara Staking\\n\\nVara Network employs an innovative and inclusive Nominated \nProof-of-Stake (NPoS) mechanism to select validators for its consensus protocol.\\n\\n## Validity \nProof\\n\\nA cryptographic proof demonstrating that a transaction or block is valid according to \n\nthe rules of the blockchain.\\n\\n## Validium\\n\\nA Layer 2 scaling solution where off-chain \ntransactions are batched and periodically submitted to the main chain for verification, similar to \noptimistic rollups but offering potentially lower fees.\\n\\n## Validator\\n\\nA node responsible for \nverifying transactions and creating new blocks on a blockchain network.\\n\\n## Vara \nNetwork\\n\\nVara Network is a next-generation blockchain platform designed to offer scalable, \nsecure, and efficient infrastructure for decentralized applications (dApps).\\n\\n## Verifiable \nComputation\\n\\nVerifiable computation is a cryptographic process that allows a party (the \nverifier) to efficiently check the correctness of the output of a computation performed by \nanother party (the prover) without having to execute the computation themselves.\\n\\n## \nVariable Buy/Sell Tax\\n\\nA dynamic fee system where the cost of buying or selling a token varies \nbased on various factors, aimed at mitigating price volatility.\\n\\n## Virtual AMM (vAMM)\\n\\nA \ntype of decentralized exchange (DEX) that uses smart contracts to manage liquidity pools, \nsimilar to automated market makers (AMMs) but utilizing Layer 2 solutions for potential \nscalability benefits.\\n\\n## Vector\\n\\nIn programming, a vector is a one-dimensional array \ndesigned to store data elements of the same type while offering the flexibility of dynamic \nresizing. Unlike traditional arrays with a fixed size, vectors can expand or contract as needed, \nmaking them a versatile data structure for various programming applications.\\n\\n## WAGMI \n(wen all gonna make it)\\n\\nA slang term expressing optimism about the future of cryptocurrency \nand the potential for widespread financial success.\\n\\n## Whale\\n\\nAn individual or entity \nholding a significant amount of a specific cryptocurrency, potentially influencing market prices \ndue to their large holdings.\\n\\n## Watchlist\\n\\nA list of cryptocurrencies or other assets that an \nindividual or organization is tracking and monitoring.\\n\\n## Whitelist\\n\\nA list of approved \nindividuals or addresses who can participate in a token sale or other exclusive event, often used \nto prevent scams or unfair access.\\n\\n## Whitepaper\\n\\nA document outlining the technical \ndetails and goals of a blockchain project, similar to a business plan.\\n\\n## Wallet Address\\n\\nA \nunique identifier used to send and receive cryptocurrency on the blockchain.\\n\\n## Web3 / \nWeb 3.0\\n\\nA vision for a decentralized internet built on blockchains and cryptocurrencies, \naiming for greater individual ownership and control of data and applications.\\n\\n## Web3 \nWallet\\n\\nA cryptocurrency wallet designed specifically for interacting with Web3 applications \nand decentralized protocols.\\n\\n## Wasm\\n\\nWebAssembly (abbreviated Wasm) is a type of \ncode that lets web applications run really fast, almost like they’re running directly on your \ncomputer.\\n\\n## Wallet\\n\\nA software application for storing and managing cryptocurrency \nprivate keys and interacting with the blockchain.\\n\\n## Wash Trade\\n\\nA fraudulent trading \nactivity where someone buys and sells the same asset to create artificial trading volume or \nmanipulate prices.\\n\\n## Wei\\n\\nThe smallest unit of Ether (ETH), the native cryptocurrency of \nthe Ethereum blockchain.\\n\\n## Worker Node\\n\\nIn Web3, a Worker Node refers to a crucial \ncomponent within decentralized networks, such as those utilizing proof-of-stake (PoS) or proof-\nof-work (PoW) consensus mechanisms. Essentially, a Worker Node performs specific tasks or \ncomputations to validate transactions, secure the network, or contribute to the overall \nfunctionality of decentralized platforms.\\n\\n## WasmEdge\\n\\nWasmEdge is an advanced, \nlightweight, high-performance, and extensible WebAssembly runtime designed for cloud-native, \nedge, and decentralized applications. It brings the power and flexibility of serverless computing, \nmicroservices, smart contracts, and IoT devices to the edge, offering a portable, fast, and \nsecure alternative to traditional container-based solutions.\\n\\n## XION\\n\\nThe XION \nBlockchain represents a significant advancement in making blockchain technology more \naccessible and user-friendly. By focusing on abstraction, modularity, and robust infrastructure, \nXION is poised to drive broader adoption and innovation within the Web3 ecosystem. Its \npioneering approach offers a pathway to a more inclusive and efficient blockchain environment, \n\nmaking a lasting impact on the industry.\\n\\n## Yield Farming\\n\\nEarning rewards by staking or \nlending cryptocurrency in DeFi protocols, similar to earning interest on traditional \ninvestments.\\n\\n## YTD\\n\\nYear-to-date, indicating the performance of an asset from the \nbeginning of the current year to the present date..\\n\\n## Zero-knowledge rollup\\n\\nZero-\nknowledge rollups (ZK-rollups) aggregate transactions into groups that are processed off-\nchain.\\n\\n## zkOracle\\n\\nAn oracle providing data to a blockchain network using zero-\nknowledge proofs, protecting the confidentiality of the data while ensuring its validity.\\n\\n## \nZero Address\\n\\nA special blockchain address with no private key, often used to burn tokens or \nsend them out of circulation.\\n\\n## Zero Confirmation Transaction\\n\\nA transaction not yet \nincluded in a block on the blockchain, considered unconfirmed and potentially subject to \nreversal.\\n\\n## Zero Knowledge Proof\\n\\nA cryptographic technique where someone can prove \nthey possess certain information without revealing the information itself, enhancing privacy and \nsecurity.\\n\\n## Zero-Knowledge Succinct Non-Interactive Argument of Knowledge (Zk-\nSnarks)\\n\\nA specific type of zero-knowledge proof with efficiency benefits, used in some \nblockchain scaling solutions.\\n\\n## zkML (Zero-Knowledge Machine Learning)\\n\\nA field of \nresearch exploring how to apply zero-knowledge proofs to machine learning models, potentially \nenabling privacy-preserving training and inference.\\n\\n## zkEVM\\n\\nzkEVM is a type of zk-rollup \ndesigned to replicate the Ethereum transaction execution environment, running smart contracts \nand verifying their correct execution through Zero-Knowledge Proofs (ZKPs)\\n\\n## zk-\nSNARK\\n\\nZk-SNARK, which stands for \"Zero-Knowledge Succinct Non-Interactive Argument of \nKnowledge,\" is a type of cryptographic proof.\\n\\n## Zero-knowledge proof\\n\\nA zero-knowledge \n(ZK) proof is a type of cryptographic protocol that allows one party (the prover) to prove to \nanother (the verifier) the truth of a certain assertion without revealing any additional information \nabout the assertion itself.\\n\\n## zkLogin\\n\\nzkLogin (Zero-Knowledge Login) represents a \ntransformative approach to user authentication in the Web3 ecosystem. Leveraging zero-\nknowledge proofs (ZKPs), zkLogin allows users to verify their identity or credentials without \nexposing sensitive information. This method ensures maximum privacy and security, critical \nattributes in decentralized environments.\\n\\n ",
    "filename": "001.Glosarry.pdf"
  },
  {
    "id": 3,
    "content": "\n\nGetting Started \nDetails about open campus here \nNetwork Details \nNetwork Attribute Value \nchainID 656476 \nSettlement Layer Arbitrum Sepolia 421614 \nRPC Url https://rpc.open-campus-codex.gelato.digital \nExplorer https://opencampus-codex.blockscout.com/ \nThe public summary of the network can be found at \nhttps://raas.gelato.network/rollups/details/public/open-campus-codex \nOverview of Docs \n• Open Campus Codex - Explains comprehensive insights into the architecture of \nOpen Campus Codex. \n• Build - Find all the resources you need to start testing, deploying, and interacting \nwith smart contracts on Open Campus Codex. \n• Services - Find all services deployed on Open Campus Codex and start levelling-\nup your applications. \n ",
    "filename": "1. Getting Started.pdf"
  },
  {
    "id": 4,
    "content": "\n\nWrite a Contract \nThis document explains how to automatically write any smart contract using the OpenZeppelin \nWizard. The resulting smart contract code can either be integrated with Remix by Clicking the \nOpen in Remix button, or copied to clipboard and pasted in the user's intended IDE. \nGetting Started  \nNavigate to the OpenZeppelin Wizard in your browser. First thing to notice is the Solidity Wizard \nand Cairo Wizard buttons. \nOne can choose any of the following tabs to begin creating an out-of-box smart contract code in \neither Solidity (for EVM chains) or Cairolang (useful for Starknet). These are: \n● ERC20: for writing an ERC-20 token smart contract \n● ERC721: for writing an NFT token smart contract \n● ERC1155: for writing an ERC-1155 token smart contract \n● Governor: for creating a DAO \n● Custom: for writing a customized smart contract \nWriting An NFT Contract  \nFor illustration purpose, we will be creating a NFT smart contract. Suppose you wanted to \ncreate a Mintable, Burnable ERC721 token and specify an appropriate license for it. \n1. Select the ERC721 tab. \n2. Give your NFT a name and a symbol by filling the Name and Symbol fields. \n3. Use the check-boxes on the left to select features of your token \n● Put a tick on the Mintable check-box \n● Put a tick on the Auto Increment Ids check-box, this ensures uniqueness of each minted \nNFT \n● Put a tick on the Burnable check-box \n● Either leave the default MIT license or type the license of your choice \nNotice that new lines of code are automatically written each time a feature is selected. \nVoila! Contract Ready  \nWith the resulting lines of code, you now have the NFT token contract written in Solidity. As \nmentioned above, this source code can now be ported to an IDE of your choice or opened \ndirectly in Remix. \nThe below figure depicts the auto-written NFT smart contract code. \n \n \n ",
    "filename": "10. Write a Contract.pdf"
  },
  {
    "id": 5,
    "content": "\n\nDeploy Using Hardhat \nHardhat is a popular smart contract development frameworks. In this tutorial, we will be using \nHardhat to deploy a simple Counter smart contract to the Custom Rollup Testnet. We will \nexplore the basics of creating a Hardhat project with a sample contract and a script to deploy it. \nFor the full instruction on how to use Hardhat, please refer to the official Hardhat documentation. \nCreate New Project  \nStart with creating an npm project by going to an empty folder, running npm init, and following its \ninstructions. You can use another package manager, like yarn, but Hardhat recommends you \nuse npm 7 or later, as it makes installing Hardhat plugins simpler. \nHardhat Smart Contract  \nTo create the sample project, run npx hardhat init in your project folder: \n● Press <ENTER> choose javascript, typescript or empty project \n● Press <ENTER> to set the project root \n● Press <ENTER> again to accept addition of .gitignore \n● Press <ENTER> to install hardhat @nomicfoundation/hardhat-toolbox \nCreate deployer account  \n● Create the .env file in your project root folder and add the following line: \nACCOUNT_PRIVATE_KEY='my private key' \n● Populate the .env file with your private key. You can get your private key from Metamask. \nSee the section below on how to get your private key from Metamask. \nHow to get your Private Key in Metamask \nwarning \nDo not commit your private key to a public repository! \nVerify that your .gitignore file contains .env to prevent your private key from being committed to \na public repository. \nConfigure Hardhat  \n● Open the hardhat.config.js file and paste the code below: \n● Javascript \n● Typescript \nrequire(\"dotenv\").config(); \nrequire(\"@nomicfoundation/hardhat-toolbox\"); \n \nmodule.exports = { \n\n solidity: \"0.8.19\", \n paths: { \n   artifacts: \"./src\", \n }, \n networks: { \n   opencampus: { \n     url: `https://rpc.open-campus-codex.gelato.digital/`, \n     accounts: [process.env.ACCOUNT_PRIVATE_KEY], \n   }, \n }, \n etherscan: { \n   apiKey: { \n     opencampus: \"your-etherscan-api-key\", \n   }, \n   customChains: [ \n     { \n       network: \"opencampus\", \n       chainId: 656476, \n       urls: { \n         apiURL: \"https://opencampus-codex.blockscout.com/api\", \n         browserURL: \"https://opencampus-codex.blockscout.com\", \n       }, \n     }, \n   ], \n }, \n}; \nWrite Smart Contract  \ninfo \nNote: The existing smart contract code that comes with the sample project is a Lock.sol \ncontract. Feel free to delete it or leave it. \n● Create a new file, in the contracts folder, named Counter.sol: \ntouch contracts/Counter.sol \n● Copy the below code and paste it in the Counter.sol contract code: \n//SPDX-License-Identifier: MIT \npragma solidity ^0.8.19; \n \ncontract Counter { \nuint256 currentCount = 0; \n \n   function increment() public { \n       currentCount = currentCount + 1; \n   } \n\n \n   function retrieve() public view returns (uint256){ \n       return currentCount; \n   } \n} \nCreate Deploy Script  \n● Delete the content of the scripts/deploy.js file and add the code below: \nconst hre = require(\"hardhat\"); \n \nasync function main() { \n const deployedContract = await hre.ethers.deployContract(\"Counter\"); \n await deployedContract.waitForDeployment(); \n console.log(`Counter contract deployed to ${deployedContract.target}`); \n} \n \nmain().catch((error) => { \n console.error(error); \n process.exitCode = 1; \n}); \nCompile Contract  \n● Install dotenv package: npm install dotenv \n● Compile your contract code (i.e., go back to the project root in the CLI), \n● npx hardhat compile \nDeploy Contract  \n● Run the deploy script: \n● npx hardhat run scripts/deploy.js --network opencampus \n \n \n ",
    "filename": "11. Deploy Using Hardhat.pdf"
  },
  {
    "id": 6,
    "content": "\n\nVerify Contracts \nOnce verified, a smart contract or token contract's source code becomes publicly available and \nverifiable, creating transparency and trust. \nThere are several ways to verify a contract, programmatically or manually on the UI. \nVerify on the UI  \n1. Go the the verify contract page (Other -> Verify Contract) \n2. Enter in the contract address you received during deployment. The dropdown will show \nyou several available verification options. Select the one you would like to use and \ncontinue. \ni. Solidity (Flattended source code) \nii. Solidity (Standard JSON Input) \n\nSolidity (Flattened Source Code)  \n \n1. Contract Address: The 0x address supplied on contract creation (added above) \n2. Is Yul Contract: Select if the contract is coded in Yul for efficiency. \n3. Include Nightly Builds: Select if you want to show nightly builds. \n4. Compiler: derived from the first line in the contract pragma solidity X.X.X. Use the \ncorresponding compiler version rather than the nightly build. \n5. EVM Version: Select the correct EVM version if known, otherwise use default. \n6. EVM Version: Select the correct EVM version if known, otherwise use default. \n7. Enter the Solidity Contract Code: You may need to flatten your solidity code if it utilizes a \nlibrary or inherits dependencies from another contract. We recommend hardhat or the \nPOA solidity flattener. To flatten your contract using contract, run: \nyarn hardhat flatten .\\contracts\\<your-contract>.sol > flattened.sol \n8. Add Contract Libraries: Enter the name and 0x address for any required libraries called \nin the .sol file. You can add multiple contracts with the \"+\" button. \n\n9. Click the Verify and Publish button. \n10. If all goes well, you will see a checkmark next to Code in the code tab, and an additional \ntab called Read Contract. The contract name will now appear in BlockScout with any \ntransactions related to your contract. \nSolidity (Standard JSON Input)  \n \n1. Include nightly builds. You can choose Yes or No depending on your compiler. \n2. Compiler. Choose the compiler version used to compile your smart contract. If you \nselected yes for nightly builds, use the compiler version rather than the build. \n3. Standard Input JSON. Upload your Standard Input JSON file. File should follows solidity \nformat and all the sources must be in Literal Content format, not a URL. \nClick the Verify & publish button and wait for the response. \nVerify Programmatically  \nTo verify contracts please follow the Verifying a Smart Contract guide to learn the different \noptions. \nIn particular, to be able to verify the contracts programatically we will need following steps: \n1- Install @nomiclabs/hardhat-etherscan package: \nyarn add --dev @nomiclabs/hardhat-etherscan \n2- Import into hardhat.config.ts \n\nimport \"@nomiclabs/hardhat-etherscan\"; \n3- Update hardhat.config.ts following: \n    apiKey: { \n     opencampus: \"XXX\", // no key required \n   }, \n   customChains: [ \n     { \n       network: \"opencampus\", \n       chainId: 656476, \n       urls: { \n         apiURL: \"https://opencampus-codex.blockscout.com/api\", \n         browserURL: \"https://opencampus-codex.blockscout.com/\", \n       }, \n     }, \n   ], \n4- Verify the contract Once the config is updated, you can verofy the contract with \nnpx hardhat verify --network opencampus YOUR-CONTRACT-ADDRESS \nYOUR-CONSTRUCTOR-ARGUMENTS \nEdit this page \n \n \n \n ",
    "filename": "12. Verify Contracts.pdf"
  },
  {
    "id": 7,
    "content": "\n\nOpen Campus ID Connect SDK \nWhere can i get it?  \nDownload it via npm here: https://www.npmjs.com/package/@opencampus/ocid-connect-js \nGithub documentation is here: https://github.com/opencampus-xyz/ocid-connect-js \nConnect OCID Button design (Figma) is here \nWhy do i need this?  \nTo integrate your product with the OpenCampus ecosystem, you need to retrieve and associate \nthe OCIDs of your users within your system. The \"Connect with OCID\" functionality works \nsimilarly to \"Login with Twitter\" or \"Login with Google.\" Our product suite provides a JavaScript \nSDK that you can integrate into your site, enabling users to log into OCID with a simple button \nclick. \nHow long does it work?  \nThis SDK provides an OAuth/OIDC interface to facilitate integration for our partners. \nJavascript-based SDK  \n● The SDK includes a JavaScript wrapper for our authentication APIs. \n● It also provides a set of React components for seamless integration into React \napplications. \n● Integration instructions are available in the package README on the public npm site. \nInteroperability  \n● The Connect with OCID APIs fully implement the OIDC standard, allowing developers to \nchoose custom integration with our authentication APIs. \n● We enforce the OIDC Code Flow with PKCE for enhanced security. \nDevelopment  \n● A Sandbox environment is available and can be easily activated in the SDK for \ndevelopment purposes. \n● The Sandbox environment does not require redirect_uri whitelisting, enabling developers \nto test their integrations before going live. \n\nConnecting to production  \nBy default, you will only be able to integrate with the “Sandbox” environment. To be whitelisted \nto interact with the production version, you will need to complete the following form! Make sure \nto give us the correct site link, as this will whitelist your app’s site at the domain level. \nThe form is here: App Whitelisting Form. \n \n \n ",
    "filename": "13. Open Campus ID Connect SDK.pdf"
  },
  {
    "id": 8,
    "content": "\n\nServices \nHere you will find common services and tools available to developers building dApps on the \nCustom Rollup, including sample configurations, and guides for many important elements of our \ninfrastructure, including: \n \n ",
    "filename": "14. Services.pdf"
  },
  {
    "id": 9,
    "content": "\n\nAccount Abstraction \nnote:Please note that this section is under active development. \nOverview  \nThe Ethereum blockchain network has two central types of accounts: externally owned accounts \n(EOAs) and contract accounts. EOAs are controlled by users; meanwhile, contract accounts are \nmanaged by smart contract code. Both account types are essential for the Ethereum \necosystem. However, EOAs are required to interact with the network, as they are the only way \nfor you to initiate transactions and execute smart contracts. \nThe problem with EOAs is their limitation to basic operations. And this restricts your options for \ninteracting with the Ethereum blockchain. For example \n● Poor Security: EOAs are secured by private keys, which are vulnerable to theft and loss. \n● Lack of customization: We must initiate transactions from EOAs, which means that we \ncan’t customize the transaction flow. For example, we can’t set up automatic payments \nor multi-factor authentication or define custom rules. \n● Gas Payment: Account must hold ETH to pay for gas fees. This is a significant barrier to \nentry for new users. \nWhat are the benefits of Account Abstraction?  \n● Increased Security: We manage conventional Ethereum accounts using seed phrases \nand private keys. This can be problematic if a user loses their seed phrase or \naccidentally leaks their private key. With account abstraction you’re given more \nopportunities to implement additional options for both account recovery and \nauthentication. \n● Improved User Experience: With account abstraction, we can create smart contract \nwallets that can be used to implement a wide range of features. For example, we can \ncreate wallets that automatically pay for gas fees, wallets that require multi-factor \nauthentication, and wallets that can be recovered using a social recovery mechanism. ",
    "filename": "15. Account Abstraction.pdf"
  },
  {
    "id": 10,
    "content": "\n\nSafe \nTo be updated when Safe Multisig app available on Open Campus. \n \n ",
    "filename": "16. Safe.pdf"
  },
  {
    "id": 11,
    "content": "\n\nZero Dev \nZeroDev is a smart, white-labeled, and modular embedded wallet for building user-friendly \nWeb3 experiences, particularly for DeFi applications. \nSmart: ZeroDev leverages account abstraction. White-labeled: ZeroDev doesn't have a UI -- it \nprovides the underlying wallet logic that you can build a totally customized experience on top of. \nModular: ZeroDev is built on top of Kernel, the most popular open-source smart account that \nsupports ERC-7579 plugins for customizing wallet logic. ZeroDev is one of the most trusted \nsolutions in AA, powering more than 50% of all AA wallets and a majority of DeFi volume that \nleverages AA. \nBefore starting please go ahead into ZeroDev Dashboard and create a project on Open \nCampus, so you will get a Project ID, \n \nPlease find a quickstart [here] \n \nWhen instantiating the react component please include bundlerProvider=\"GELATO\". \n <React.StrictMode> \n      <ZeroDevProvider \n           projectId={YOUR PROJECT ID} \n           bundlerProvider=\"GELATO\" \n         > \n       </ZeroDevProvider> \n \n </React.StrictMode> \n \n ",
    "filename": "17. Zero Dev.pdf"
  },
  {
    "id": 12,
    "content": "\n\nAutomation & Off-chain Data \nThe Problem  \nIn the realm of blockchain development, especially with decentralized applications (dApps), a \nsignificant challenge emerges in the form of limited auto-execution capabilities. Traditionally, \nsmart contracts, despite their advanced functionalities, lack the inherent ability to initiate or call \nmethods automatically. This limitation poses a hurdle in the seamless operation and scalability \nof blockchain applications. \nThe Solution  \nTo address this gap, automation solutions have been developed. These systems are designed \nto monitor both on-chain and off-chain data sources continuously. They are programmed to \nrecognize specific predefined conditions. Once these conditions are met, the automation system \nsprings into action, executing the necessary transactions without human intervention. \nUse cases  \n1. Auto Harvesting in DeFi: In decentralized finance applications, automation can manage \nyield farming strategies, harvesting rewards automatically when they reach a certain \nthreshold, thereby optimizing the return on investment for users. \n2. Limit Orders in Trading: Automated systems can execute trades when certain price \npoints are hit, mirroring the functionality of limit orders in traditional trading but within a \ndecentralized environment. \n \n ",
    "filename": "18. Automation.pdf"
  },
  {
    "id": 13,
    "content": "\n\nGelato Web3 Functions \nOverview  \nGelato's Web3 Functions is a powerful automation system designed to streamline and enhance \nWeb3 operations. Web3 Functions serve as a comprehensive tool, enabling developers to \neffortlessly set up, manage, and automate their smart contract tasks. Determining your Needs \nOff-chain Data or Computation? Sometimes, automation tasks require data that isn't readily \navailable on the blockchain, or they might need computations that are better performed \noff-chain. In such cases, Typescript Functions should be the choice. \nAll Checks On-chain? If all the conditions necessary for your automation task can be directly \nverified on the blockchain, you have the option to select between Typescript Functions, Solidity \nFunctions & Automated Transactions \nTriggers  \n1. Time Interval Description: Use this trigger to execute tasks at regular intervals, e.g., \nevery 10 minutes or once every 24 hours. It's like setting a straightforward, recurring \nalarm. \n2. Cron Expressions Description: This offers a more refined control compared to the Time \nInterval. With cron expressions, you can set tasks to run at specific moments, such as \n\"every Tuesday at 3 PM\" or \"on the 1st of every month\". It gives you precision in task \nscheduling. \n3. On-Chain Event Description: Ideal for those wanting their tasks to respond dynamically \nto blockchain activities. Whenever a specified event occurs on the blockchain, this \ntrigger springs your task into action. It's like a vigilant watcher, always ready to act. \n4. Every Block Description: This function operates with the rhythm of the blockchain itself, \nexecuting your chosen function each time a new block is created. \nWhat to Execute?  \nTypescript Functions  \nTypescript Functions are decentralized cloud functions that work similarly to AWS Lambda or \nGoogle Cloud, just for web3. They enable developers to execute on-chain transactions based \non arbitrary off-chain data (APIs / subgraphs, etc) & computation. These functions are written in \nTypescript, stored on IPFS and run by Gelato. \nSolidity Functions  \nSolidity Functions are crucial for making on-chain tasks automatic and more efficient. They \nconnect set conditions with specific actions in a smart contract, providing a straightforward \n\nmethod to turn user needs into automated processes. Consider them as a set of \"if-then\" rules: \nIf certain conditions are met on the blockchain, then a specific function gets executed. This level \nof automation ensures that the decentralized application can operate with minimal manual \nintervention, providing a seamless user experience. \nAutomated Transaction  \nAutomated Transaction ensures that a specific function on the target smart contract gets reliably \ntriggered. When you pre-define the inputs, it means that every time Gelato initiates the function \ncall, it uses consistent, predetermined arguments. \nQuick Start  \nWriting & Deploying Typescript Functions  \n1. Clone the hardhat-template repo \ngit clone web3-functions-hardhat-template \n2. CD into the folder and install \ncd web3-functions-hardhat-template && yarn install \n3. Update the index.ts in one of the examples \nWeb3Function.onRun(async (context: Web3FunctionContext) => { \n const { userArgs, multiChainProvider } = context; \n \n const provider = multiChainProvider.default(); \n // Retrieve Last oracle update time \n const oracleAddress = \n   (userArgs.oracle as string) ?? \"0x71B9B0F6C999CBbB0FeF9c92B80D54e4973214da\"; \n \n // YOUR CUSTOM LOGIC \n ..... \n \n // Return if nothing has to be pushed on-chain \n   return { canExec: false, message: `Coingecko call failed` }; \n \n // Return if tx has to be pushed on-chain \n return { \n   canExec: true, \n   callData: [ \n     { \n       to: oracleAddress, \n       data: oracle.interface.encodeFunctionData(\"updatePrice\", [price]), \n     }, \n   ], \n }; \n\n}); \n4. Deploy the Web3 Function to IPFS and create the Task \nnpx w3f deploy web3-functions/YOUR-FUNCTION/index.ts \nResult: \n$ npx w3f deploy web3-functions/YOUR-FUNCTION/index.ts \n✓ Web3Function deployed to ipfs. \n✓ CID: QmYMysfAhYYYrdhVytSTiE9phuoT49kMByktXSbVp1aRPx \n \nTo create a task that runs your Web3 Function every minute, visit: \n> \nhttps://beta.app.gelato.network/new-task?cid=QmYMysfAhYYYrdhVytSTiE9phuoT49kMByktXS\nbVp1aRPx \n✨  Done in 3.56s. \nFinally, go to the Gelato App, create a new task, decide on the trigger, and input the CID. \n \nWriting & Deploying Solidity Functions  \nThe central part of a solidity function is the Checker. A Checker acts as a bridge between \nconditions and smart contract executions. Its purpose? To check conditions and determine \nwhether a task should be executed by Gelato. Every checker returns two main things: \n● canExec (Boolean): Indicates if Gelato should execute the task. \n● execData (Bytes): Contains the data that executors will use during execution. \n\nOnce you have deployed your checker, go to the Gelato App, create a new task, decide the \ntrigger, and input the address of the checker contract and the method that does the check. \n \n ",
    "filename": "19. Gelato Web3 Functions.pdf"
  },
  {
    "id": 14,
    "content": "\n\nWhat is Open Campus? \nOpen Campus, also known as EDU Chain, is the first Layer 3 (L3) blockchain built \nspecifically for the education industry. It aims to leverage the traditional educational \nlandscape by bringing it on-chain, creating a secure and transparent ecosystem for all \neducational activities. \n• Educational Blockchain: The first of its kind L3 blockchain tailored for \neducational purposes. \n• Learn-to-Earn Ecosystem: A vibrant platform that links learning with earning, \nproviding real-world value to educational achievements. \n• Transparency and Security: Blockchain technology ensures that all educational \nrecords and transactions are secure, immutable, and transparent. \n• Trackable Learning Journey: Every educational milestone and achievement is \nrecorded on the blockchain, making it easy to track and verify progress. \n \n \n️ Arbitrum Orbit Overview \n️ Setup Codex RPC Node \n️ Block Explorer \n ",
    "filename": "2. What is Open Campus.pdf"
  },
  {
    "id": 15,
    "content": "\n\nBridges \nNote: Please note that this section is under active development. \nWhat is a Bridge?  \nBridges are a way to connect two different blockchains. They are a special type of smart \ncontract that allows you to lock up tokens on one blockchain and mint the same amount of \ntokens on another blockchain. This is a very useful feature, as it allows you to transfer tokens \nbetween different blockchains. For example, you can transfer tokens from the Ethereum \nblockchain to the Binance Smart Chain (BSC) blockchain. \n \n ",
    "filename": "20. Bridges.pdf"
  },
  {
    "id": 16,
    "content": "\n\nLayer Zero \nLayerZero is a messaging protocol, not a blockchain. Using smart contracts deployed on each \nchain, in combination with Decentralized Verifier Networks (DVNs) and Executors, LayerZero \nenables different blockchains to seamlessly interact with one another. \nGetting Started  \nTo start sending omnichain messages with LayerZero, you only need to implement two \nfunctions: \n \n● _lzSend: This function is used to send a message to a different chain. \n \n_lzSend( \n _dstEid, // the destination endpoint id \n _payload, // encoded message payload being sent \n _options, // message execution options \n MessagingFee(msg.value, 0), // the fee in native gas and ZRO token \n payable(msg.sender) // refund address in case of failed source message \n); \n● _lzReceive: This function is used to receive a message from a different chain. \n \nfunction _lzReceive( \n Origin calldata _origin, // struct containing srcEid, sender address, and the message nonce \n bytes32 _guid, // global message packet identifier \n bytes calldata payload, // encoded message being received \n address _executor, // the address of who executed the message \n bytes calldata _extraData // appended executor data for the call \n) internal override { \n data = abi.decode(payload, (string)); // your receive logic here \n} \n \nLayerZero offers Contract Standards that simplify this implementation by providing out of the \nbox message handling, interfaces for custom protocol configurations, and other quality of life \nimprovements: \n● OApp: the base contract standard for omnichain messaging and configuration. \n● OFT: the base contract standard for omnichain messaging and configuration. \nPrerequisites  \n1. You should first be familiar with writing and deploying contracts to your desired \nblockchains. This involves understanding the specific smart contract language and the \ndeployment process for those chains. \n\n2. A wallet set up and funded for the chains you'll be working with. \nDeploying your Contracts  \nnote \nThis example can be used with any EVM compatible chain. \nTo learn how to deploy your contracts, please refer to the Deploying Contracts section. \nTo checkout endpoint addresses please refer to the Endpoints section in the layerzero docs. \nConnecting your Contracts  \nTo connect your contracts, call setPeer and pass the address of your destination contract as a \nbytes32 value, as well as the destination endpoint ID. If successful, you now should be setup to \nstart sending cross-chain messages! \nTo go more in depth, please refer to the Getting Started section in the layerzero docs. \n \n ",
    "filename": "21. Layer Zero.pdf"
  },
  {
    "id": 17,
    "content": "\n\nIndexers \nUnderstanding Blockchain Indexing  \nBlockchain technology, often likened to a digital ledger, securely records data in encrypted \nblocks distributed across a decentralized network. Each block in the chain not only contains a \nrecord of new transactions but also carries information from the preceding block. However, due \nto blockchain's sequential structure, the associated data is dispersed across numerous blocks \nwithout an inherent system for identifying or extracting specific, higher-level data. \nBlockchain indexing steps in to address this. It allows users to efficiently search and filter \nthrough blockchain data, akin to how one might use Google, Bing, or other search engines to \nfind information on the internet. \nChallenges in Indexing Blockchain Data  \nIndexing data within a decentralized infrastructure like blockchain presents several obstacles: \n1. Absence of a Standard Query Language: Blockchain's immutable nature complicates \ndirect data reading, as it lacks a built-in query language similar to SQL in traditional \ndatabases. To access even basic information such as a user's transaction history, one \nwould have to examine each block individually. \n2. Complexities in Data Retrieval: The node structure of blockchains, particularly those akin \nto Ethereum, complicates data retrieval. Historical records are typically spread across \nvarious events and stored in separate sections of a node. Limited access to these \nevents in some public nodes can significantly slow down the query process. \n3. Limitations of Existing APIs: The APIs currently available are often restricted to basic \nqueries. These include range queries (such as records from a specific timeframe or a \ncertain number of transactions) and top-k queries (which rank different data points \nrelatively). This limitation hinders the ability to conduct more complex data analyses or \nsearches. \nSubgraphs: A Key Solution  \nOne of the most promising solutions to the challenges of indexing blockchain data is the use of \nsubgraphs. Subgraphs are essentially predefined data structures that are designed to efficiently \nindex and query data from a blockchain. \nWhat are Subgraphs?  \nSubgraphs are open-source APIs that allow developers to extract data from a blockchain and \nstore it in a structured format. They are designed to be flexible, allowing developers to define \nthe data they want to extract and how they want to store it. This flexibility enables subgraphs to \n\nbe used for a wide range of applications, from simple data retrieval to more complex data \nanalysis. \nAdvantages of Subgraphs  \n1. Customized Data Views: Developers can create subgraphs tailored to their specific \nneeds, focusing on the particular data they're interested in. \n2. Real-time Data Updates: Subgraphs can update their indexed data in real-time with each \nnew block on the blockchain, ensuring up-to-date information. \n3. Decentralized and Open: Like blockchains, subgraphs can be hosted in a decentralized \nmanner, promoting transparency and accessibility. \n \n ",
    "filename": "22. Indexers.pdf"
  },
  {
    "id": 18,
    "content": "\n\nGoldsky \nInstall + log in  \n1. Create an account at app.goldsky.com. \n2. Create an API key on the Settings page. \n3. Install the Goldsky CLI: \n4. curl https://goldsky.com | sh \n5. Log in with the API key created earlier: \n6. goldsky login \nBuild and deploy  \nDeploy your subgraph in one of four ways: \nBuild and deploy from source  \ncd <your-subgraph-directory> \ngraph build # Build your subgraph as normal. \ngoldsky subgraph deploy my-subgraph/1.0.0 \nBuild & Deploy from ABI and address  \ngoldsky subgraph deploy your-subgraph-name/your-version --from-abi <path-to-config-file> \nQuery Endpoint  \nAccess data by querying the endpoints. Use the following command to list all your subgraphs, \nand open the “GraphQL API” links that get printed in your browser to query your data in the \nGraphQL playground. \ngoldsky subgraph list \n \n \n ",
    "filename": "23. Goldsky.pdf"
  },
  {
    "id": 19,
    "content": "\n\nOracles \nOverview  \nBlockchain oracles are third-party services or agents that provide smart contracts with external \ninformation and serve as bridges between blockchains and the external world. Because \nblockchains cannot access external data (outside of their network) due to their secure and \ndeterministic nature, oracles are used to fetch, verify, and relay real-world data to smart \ncontracts in a way that's trustworthy. \nUse Cases  \nDecentalized Finance (DeFi)  \nOracles provide price feeds, enabling DeFi platforms to calculate token values, manage \ncollateral, and execute liquidations. By sourcing data from various exchanges and financial \nplatforms, oracles contribute to the robustness of DeFi applications. \nGaming  \nBlockchain-based gaming and betting platforms use oracles to determine the outcomes of \nevents, such as sports matches or random number generation. By connecting to various data \nsources and verifying results, oracles ensure fair and transparent gaming experiences. \nInsurance  \nOracles can be employed in the insurance industry to automate claims processing and \nunderwriting. They can fetch data related to weather conditions, flight delays, or health records, \nenabling insurers to create parametric insurance products. This reduces fraud and ensures \nquicker payouts based on predefined triggers. \nand much more... \n ",
    "filename": "24. Oracles.pdf"
  },
  {
    "id": 20,
    "content": "\n\nDIA \nDIA token price feeds provide smart contract real-time price information of 3,000+ \ncryptocurrencies, transparently sourced from 80+ trusted, high-volume DEXs and CEXs. \nThe feeds facilitate the development of DeFi use cases such as money markets, \nlending/borrowing, synthetic asset issuance, options, derivatives and futures markets, and many \nmore. \nHow to access DIA's oracle?  \nHere is an example of how to retrieve price value from a standard DIA oracle. For the purpose \nof this example, we will be using the following demo oracle on Ethereum: 0xa935...5856. \n1. Access any DIA oracle smart contract. \n2. Call getValue(pair_name) with pair_name being the full pair name such as BTC/USD. \nYou can use the \"Read\" section on Etherscan to execute this call. \n3. The response of the call contains four values: \n○ The current asset price in USD with a fix-comma notation of 8 decimals. \n○ the UNIX timestamp of the last update. \nOracle Integration Example  \nHere is an example on how you can integrate DIA's oracle into your smart contract with Solidity: \npragma solidity ^0.8.13; \n \ninterface IDIAOracleV2{ \n   function getValue(string memory) external returns (uint128, uint128); \n} \n \ncontract IntegrationSample{ \n \n   address immutable ORACLE = 0xa93546947f3015c986695750b8bbEa8e26D65856; \n   uint128 public latestPrice; \n   uint128 public timestampOflatestPrice; \n \n   function getPriceInfo(string memory key) external { \n       (latestPrice, timestampOflatestPrice) = IDIAOracleV2(ORACLE).getValue(key); \n   } \n \n   function checkPriceAge(uint128 maxTimePassed) external view returns (bool inTime){ \n        if((block.timestamp - timestampOflatestPrice) < maxTimePassed){ \n            inTime = true; \n        } else { \n\n            inTime = false; \n        } \n   } \n} \nFind more detailed description of the functions and how to run test in this GitHub repository \nDIA has a dedicated Solidity library to facilitate integration of DIA oracles in your own contracts. \nThe library consists of two functions, getPrice and getPriceIfNotOlderThan. You can learn more \nabout the library and how to use it in the DIA documentation. \n \n ",
    "filename": "25. DIA.pdf"
  },
  {
    "id": 21,
    "content": "\n\nRelay \nWhat is Relaying?  \nStandard Transactions  \nIn a standard Ethereum transaction, an ethereum user signs and sends the transaction \nthemselves. This user controls the private key to an externally owned account (EOA) which they \ncan use to sign a transaction and prove they have the right to spend the balance associated \nwith that account address. For each transaction a user sends, there is an associated transaction \nfee, known as gas. Since Ethereum executes computation, each unit of computation has an \nassociated gas cost, which deters malicious actors from overloading the network by requiring \nthem to pay heavily for a potential attack. This is excellent news for Ethereum's security and \nhelps keep the network consistent under load, but it comes at a hidden cost for onboarding new \nusers. \nOnboarding Issues  \nHow does a new user start interacting with exciting on-chain applications like DeFi, NFTs, or \ngaming? They will always need the native token to pay for gas on every network, even if the \nnetwork has very cheap gas fees like Polygon. This requires the user to open an account at a \ncentralised exchange, go through KYC, and buy crypto using fiat. This can be quite a process, \neven for the most skilled of degens out there, and it can deter new users from being onboarded \nto a dApp by increasing the latency between their initial excitement and the time it takes to \nactually get started. This is where relaying comes in! A relayer can help solve these issues by \nsending a transaction on behalf of the user. \nWhat is a Relayer?  \nWe allow the user to send a transaction without a native token balance (it turns out relayers can \nbe super nifty in loads of ways, for example, allowing a user who wants to swap a token to pay \nfor the gas using the token being swapped!). Ideally, we would also like to still utilise the \nexcellent security of a user signature, but for the transaction to be sent by a different EOA, one \ncontrolled by a relayer, who abstracts gas payment away from the user. This is a very import \ncontext shift to understand. We have shifted from a user signing and sending a transaction \nthemselves, to a user signing a standardised message and passing that on to a relayer. This \nrelayer will, first, verify the user's signature for security, and then pass their message along \non-chain. Gelato Relay does exactly this by taking a user's message off-chain and subsequently \nbuilding a meta-transaction which is executed on chain. \n\nMeta Transactions and EIP-712  \nA meta transaction is a regular ethereum transaction which contains the actual message to be \ndelivered on-chain to a target contract within itself, hence the term meta. The outer transaction \nhelps facilitate the first on-chain call which is sent by a relayer. The call is forwarded to the \ntarget contract using an intermediate smart contract (Gelato Relay), which in turn forwards the \ncall using the inner transaction to deliver the relayed message. \nTo achieve gasless transactions securely, Gelato Relay makes use of the EIP-712 standard. \nEIP-712 allows for a standardised way to sign and hash typed structured data. This means the \nuser can sign a message using their wallet without incurring a gas cost or interacting with the \nchain at all, and this signature can be verified on-chain, by the relayer, facilitating a gasless \ntransaction with security built in. This message will include important information such as the \ntransaction signer address, the target contract address, and the calldata payload used to target \na specific function. \n \n ",
    "filename": "26. Relay.pdf"
  },
  {
    "id": 22,
    "content": "\n\nGelato Relay \nIntroduction  \nUsing Gelato Relay, we relay your user's transactions on-chain, enabling secure gasless \ntransactions for an ultra-smooth UX for your app. This allows for a variety of new web3 \nexperiences, as the user can now pay by only signing a message, or their transaction costs can \nbe sponsored by the developer. As long as the gas costs are covered in one of the multiple \npayment methods that Gelato supports, we handle the rest reliably, quickly and securely. \n \nPrerequisites  \n● \"node\": \">=14.0.0\" \n● Basic JavaScript knowledge. \n● ethers knowledge \n\nGetting started  \n1: Installation  \nInstall the Gelato Relay SDK \nyarn add @gelatonetwork/relay-sdk \n2: Choose the Method  \nAt this point, you will need to answer the following questions, which will determine the method to \nuse when calling the Gelato Relay. \n● Do you require user authentication? When the use-case requires to authenticate the \noriginal user, you will need to implement the ERC2771 method where the user will sign \nthe payload, and the original user will be decoded on-chain from the callData replacing \nmsg.sender through _msgSender(), please see additional info here. \n● What is the funding strategy? When relaying a transaction, the Gelato Nodes are paying \nthe gas fees. There are two different ways of paying the fees back to Gelato. Either \ncreating a 1Balance account and deposit USDC on polygon that will pay for all of the \ntransactions on all EVM chains Gelato is deployed; or transferring back to gelato the \nfees while the transaction is executing, we call these methods syncFee, more info can \nbe found here, in this latter case, the target contract would need to inherit the \"Gelato \nRelay Context\" contracts, so the methods to query and transfer the fee to Gelato are \navailable. \nIf you require user authentication and you want to pay the transactions with a 1Balance account, \nthe method to use is the sponsoredCallERC2771. \nIf you require user authentication and you want every transaction to pay for itself, transferring by \nexecution the fees to Gelato, the method to use is the callWithSyncFeeERC2771. \nIf you don't require user authentication and you want to pay the transactions with a 1Balance \naccount, the method to use is the sponsoredCall. \nIf you don't require user authentication and you want every transaction to pay for itself, \ntransferring the fees by execution to Gelato, the method to use is the callWithSyncFee. \n3: Implementation  \nWe will require three simple steps to implement Gelato Relay. Here, we are going to showcase \nthe three steps required to implement the method sponsoredCallERC2771, which is the most \nused one. \nStep 1: Inherit Context Contract  \nDepending on the method, you must inherit different contracts as they will provide other \nmethods. In this case, we will have to inherit the ERC2771Context. The ERC2771Context \nprovide us with the methods _msgSender() and _msgData() that will allow us to recover the \noriginal user sending the transaction. \nimport { \n\n   ERC2771Context \n} from \"@gelatonetwork/relay-context/contracts/vendor/ERC2771Context.sol\"; \n \ncontract CounterERC2771 is ERC2771Context { \n \n   // ERC2771Context: setting the immutable trustedForwarder variable \n   constructor(address trustedForwarder) ERC2771Context(trustedForwarder) {} \n \n   function incrementContext() external { \n \n       // Incrementing the counter mapped to the _msgSender! \n       contextCounter[_msgSender()]++; \n \n       // Emitting an event for testing purposes \n       emit IncrementContextCounter(_msgSender()); \n   } \n} \nStep 2: Import the relay SDK  \nIn your frontend/backend, you would need to import and instantiate the relay class. \nimport { GelatoRelay, SponsoredCallERC2771Request } from \"@gelatonetwork/relay-sdk\"; \nconst relay = new GelatoRelay(API_KEY); \nStep 3: Send the payload to Gelato  \nThis is an example using Gelato's CounterERC2771.sol, which is deployed on these networks. \n// Set up on-chain variables, such as target address \nconst counter = \"0x00172f67db60E5fA346e599cdE675f0ca213b47b\"; \nconst abi = [\"function incrementContext()\"]; \nconst provider = new ethers.BrowserProvider(window.ethereum); \nconst signer = provider.getSigner(); \nconst user = signer.getAddress(); \n \n// Generate the target payload \nconst contract = new ethers.Contract(counter, abi, signer); \nconst { data } = await contract.incrementContext.populateTransaction(); \n \n// Populate a relay request \nconst request: CallWithERC2771Request = { \n chainId: (await provider.getNetwork()).chainId, \n target: counter; \n data: data; \n user: user; \n}; \n \n\n// Without a specific API key, the relay request will fail! \n// Go to https://relay.gelato.network to get a testnet API key with 1Balance. \n// Send a relay request using Gelato Relay! \nconst relayResponse = await relay.sponsoredCallERC2771(request, provider, apiKey); \nTracking your Request  \nWhen submitting your Gelato Relay requests, you'll receive a taskId in response. This taskId \nallows you to track the status of your request in two primary ways: \n1. WebSocket Subscriptions: This is the recommended and most efficient method. By \nsubscribing via WebSocket, the Gelato backend will automatically push updates for all \nyour tasks to your Relay SDK client. To start receiving these updates, you must register \na callback function, which will be triggered every time one of your tasks gets updated. \nDetailed implementation can be found here. \n2. Polling for Updates: Alternatively, you can periodically query the Gelato task status API \nfor updates. If you're using the Gelato Relay SDK, the getTaskStatus method makes this \neasy. Detailed implementation can be found here. \n \nto Relay \nIntroduction  \nUsing Gelato Relay, we relay your user's transactions on-chain, enabling secure gasless \ntransactions for an ultra-smooth UX for your app. This allows for a variety of new web3 \nexperiences, as the user can now pay by only signing a message, or their transaction costs can \nbe sponsored by the developer. As long as the gas costs are covered in one of the multiple \npayment methods that Gelato supports, we handle the rest reliably, quickly and securely. \n\n \nPrerequisites  \n● \"node\": \">=14.0.0\" \n● Basic JavaScript knowledge. \n● ethers knowledge \nGetting started  \n1: Installation  \nInstall the Gelato Relay SDK \nyarn add @gelatonetwork/relay-sdk \n2: Choose the Method  \nAt this point, you will need to answer the following questions, which will determine the method to \nuse when calling the Gelato Relay. \n● Do you require user authentication? When the use-case requires to authenticate the \noriginal user, you will need to implement the ERC2771 method where the user will sign \nthe payload, and the original user will be decoded on-chain from the callData replacing \nmsg.sender through _msgSender(), please see additional info here. \n\n● What is the funding strategy? When relaying a transaction, the Gelato Nodes are paying \nthe gas fees. There are two different ways of paying the fees back to Gelato. Either \ncreating a 1Balance account and deposit USDC on polygon that will pay for all of the \ntransactions on all EVM chains Gelato is deployed; or transferring back to gelato the \nfees while the transaction is executing, we call these methods syncFee, more info can \nbe found here, in this latter case, the target contract would need to inherit the \"Gelato \nRelay Context\" contracts, so the methods to query and transfer the fee to Gelato are \navailable. \nIf you require user authentication and you want to pay the transactions with a 1Balance account, \nthe method to use is the sponsoredCallERC2771. \nIf you require user authentication and you want every transaction to pay for itself, transferring by \nexecution the fees to Gelato, the method to use is the callWithSyncFeeERC2771. \nIf you don't require user authentication and you want to pay the transactions with a 1Balance \naccount, the method to use is the sponsoredCall. \nIf you don't require user authentication and you want every transaction to pay for itself, \ntransferring the fees by execution to Gelato, the method to use is the callWithSyncFee. \n3: Implementation  \nWe will require three simple steps to implement Gelato Relay. Here, we are going to showcase \nthe three steps required to implement the method sponsoredCallERC2771, which is the most \nused one. \nStep 1: Inherit Context Contract  \nDepending on the method, you must inherit different contracts as they will provide other \nmethods. In this case, we will have to inherit the ERC2771Context. The ERC2771Context \nprovide us with the methods _msgSender() and _msgData() that will allow us to recover the \noriginal user sending the transaction. \nimport { \n   ERC2771Context \n} from \"@gelatonetwork/relay-context/contracts/vendor/ERC2771Context.sol\"; \n \ncontract CounterERC2771 is ERC2771Context { \n \n   // ERC2771Context: setting the immutable trustedForwarder variable \n   constructor(address trustedForwarder) ERC2771Context(trustedForwarder) {} \n \n   function incrementContext() external { \n \n       // Incrementing the counter mapped to the _msgSender! \n       contextCounter[_msgSender()]++; \n \n       // Emitting an event for testing purposes \n       emit IncrementContextCounter(_msgSender()); \n\n   } \n} \nStep 2: Import the relay SDK  \nIn your frontend/backend, you would need to import and instantiate the relay class. \nimport { GelatoRelay, SponsoredCallERC2771Request } from \"@gelatonetwork/relay-sdk\"; \nconst relay = new GelatoRelay(API_KEY); \nStep 3: Send the payload to Gelato  \nThis is an example using Gelato's CounterERC2771.sol, which is deployed on these networks. \n// Set up on-chain variables, such as target address \nconst counter = \"0x00172f67db60E5fA346e599cdE675f0ca213b47b\"; \nconst abi = [\"function incrementContext()\"]; \nconst provider = new ethers.BrowserProvider(window.ethereum); \nconst signer = provider.getSigner(); \nconst user = signer.getAddress(); \n \n// Generate the target payload \nconst contract = new ethers.Contract(counter, abi, signer); \nconst { data } = await contract.incrementContext.populateTransaction(); \n \n// Populate a relay request \nconst request: CallWithERC2771Request = { \n chainId: (await provider.getNetwork()).chainId, \n target: counter; \n data: data; \n user: user; \n}; \n \n// Without a specific API key, the relay request will fail! \n// Go to https://relay.gelato.network to get a testnet API key with 1Balance. \n// Send a relay request using Gelato Relay! \nconst relayResponse = await relay.sponsoredCallERC2771(request, provider, apiKey); \nTracking your Request  \nWhen submitting your Gelato Relay requests, you'll receive a taskId in response. This taskId \nallows you to track the status of your request in two primary ways: \n1. WebSocket Subscriptions: This is the recommended and most efficient method. By \nsubscribing via WebSocket, the Gelato backend will automatically push updates for all \nyour tasks to your Relay SDK client. To start receiving these updates, you must register \na callback function, which will be triggered every time one of your tasks gets updated. \nDetailed implementation can be found here. \n\n2. Polling for Updates: Alternatively, you can periodically query the Gelato task status API \nfor updates. If you're using the Gelato Relay SDK, the getTaskStatus method makes this \neasy. Detailed implementation can be found here. \n \n ",
    "filename": "27. Gelato Relay.pdf"
  },
  {
    "id": 23,
    "content": "\n\nWallets \nOverview  \nWallet as a Service (WaaS) is essentially a modern solution for managing digital assets, tailored \nfor businesses and institutions. It's like having a digital wallet, but with advanced features and \nsecurity designed for professional use. \nAt its core, WaaS provides a secure and scalable way to handle cryptocurrencies and other \ndigital assets. It's designed to be flexible, catering to the needs of various businesses, \nregardless of their size. \nKey Features  \n1. Ease of Use and Security: It strikes a balance between being user-friendly and \nmaintaining high security, ensuring that managing digital assets is straightforward \nwithout compromising safety. \n2. Integration with Multiple Blockchains: WaaS allows for seamless connection with various \nblockchain networks. This means businesses can manage different types of digital \nassets across different blockchains all in one place. \n3. Key Recovery System: One of the challenges with digital wallets is the risk of losing \naccess keys. WaaS typically includes a system for recovering these keys, adding an \nextra layer of safety and peace of mind. \n4. Low-Cost Fees: It's designed to be cost-effective, minimizing the expenses associated \nwith digital asset management. \n \nWaaS offers a comprehensive digital wallet solution that addresses the main challenges of \nmodern digital asset management, combining ease of use, security, efficient blockchain \nintegration, a reliable key recovery system, and affordability. \n ",
    "filename": "28. Wallets-As-A-Service.pdf"
  },
  {
    "id": 24,
    "content": "\n\nPrivy \nThe Privy React SDK is the easiest way to onboard your users to web3 in your React App. \nWith just nine minutes of setup, you get out-of-the-box support for: \n● A variety of login methods, including email, phone, wallets, and social \n● Customizable UIs to progressively onboard your users \n● Self-custodial embedded wallets and powerful connectors for external wallets \nFor a Quickstart please visit here \nWhen using privy on Open Campus Testnet, please bear in mind that defaultChain and \nsupportedChainshave to be included in the chain config. \n<PrivyProvider \n appId=\"your-privy-app-id\" \n config={{ \n   // Customize Privy's appearance in your app \n   appearance: { \n     theme: 'light', \n     accentColor: '#676FFF', \n     logo: 'https://your-logo-url', \n   }, \n   // Create embedded wallets for users who don't have a wallet \n   embeddedWallets: { \n     createOnLogin: 'users-without-wallets', \n   }, \n \n   // Custom congif here \n       defaultChain: openCampusChain, \n       supportedChains: [openCampusChain], \n \n }} \n> \n</PrivyProvider> \n \n \n// OpenCampusChain definition here \nimport { defineChain } from \"viem-15\"; \nconst openCampusChain= defineChain ({ \n       id: 656476, \n       network: \"Open Campus Codex\", \n       name: \"Open Campus Codext\", \n       nativeCurrency: { \n           name: \"EDU\", \n           symbol: \"EDU\", \n           decimals: 18, \n\n       }, \n       rpcUrls: { \n           public: { \n               http: [\"https://rpc.open-campus-codex.gelato.digital\"], \n           }, \n           default: { \n               http: [\"https://rpc.open-campus-codex.gelato.digital\"], \n           }, \n       }, \n       blockExplorers: { \n           default: { \n               name: \"Block Scout\", \n               url: \"https://opencampus-codex.blockscout.com/\", \n           }, \n       }, \n       contracts: { \n       }, \n       testnet: true, \n   }), \n ",
    "filename": "29. Privy.pdf"
  },
  {
    "id": 25,
    "content": "\n\nArbitrum Orbit Overview \nArbitrum Orbit is an Optimistic rollup-based framework designed to empower web3 businesses \nby enabling the creation of custom, use case-specific Layer 2 (L2) or Layer 3 (L3) chains in a \npurely permissionless way. Orbit leverages the Arbitrum Nitro Tech stack, offering unparalleled \nscalability, advanced compression, full EVM compatibility, and soon-to-be-released cross-chain \ninteroperability. Essentially, Arbitrum Orbit can be thought of as deployable and configurable \ninstances of the Nitro stack, forming an ecosystem of independent chains. \nKey Features of Arbitrum Orbit  \n1. Customizable Throughput: Orbit chains provide dedicated throughput, ensuring high \nperformance and resource availability tailored to specific dApp requirements. \n2. EVM+ Compatibility: Support for multiple programming languages (Rust, C++, C, and \nSolidity) through Stylus, enabling flexible and cost-effective smart contract development. \n3. Predictable Gas Costs: Isolated transaction environments ensure stable and predictable \ngas fees, crucial for business cost forecasting. \n4. Broad Data Availability Options: Flexibility to choose data availability models, including \nEthereum Layer 1 or Data Availability Committees (DACs) for off-chain storage. \n5. Robust Security: Leveraging Ethereum's security and the Arbitrum Nitro tech stack \nensures a high level of security for Orbit chains. \n \nBy choosing Arbitrum Orbit, Open Campus leverages a powerful, flexible, and scalable \nblockchain solution that meets our unique needs. This partnership enables us to build an \ninnovative educational platform that redefines the Learn-to-Earn model, offering unparalleled \nbenefits to our users. \n \n \n ",
    "filename": "3. Arbitrum Orbit Overview.pdf"
  },
  {
    "id": 26,
    "content": "\n\nWeb3Auth \nWeb3Auth is a pluggable wallet infrastructure for Web3 wallets and applications. It streamlines \nthe onboarding of both mainstream and crypto native users in under a minute by providing \nexperiences that they're most comfortable with. With support for all OAuth-based login systems, \nweb & mobile native platforms, Web3Auth provides a seamless onboarding experience for your \nusers \nYou can follow a quick start guide here \nIn order to use Web3Auth on Open Campus testnet we will need to adapt the network config file \nto \n \nconst  chainConfig: { \n   chainNamespace: \"eip155\", \n   chainId: \"0xA045C\",// Cahin Id 656476 in hex \n   rpcTarget: \"https://rpc.open-campus-codex.gelato.digital\", \n   displayName: \"Open Campus Codex\", \n   blockExplorer: \"https://opencampus-codex.blockscout.com/\", \n   ticker: \"EDU\", \n   tickerName: \"EDU\", \n }, \n \n \n ",
    "filename": "30. Web3Auth.pdf"
  },
  {
    "id": 27,
    "content": "\n\nCommunity Forum \nWelcome to our Community Forum, a vibrant hub for developers, enthusiasts, and innovators in \nthe Web3 space. \nWhy Participate?  \n● Collaboration: Share ideas, collaborate on projects, and build together. \n● Support: Get answers to your queries and help others. \n● Stay Informed: Keep up with the latest trends and updates in Web3. \nGuidelines  \n● Respect: Maintain a respectful and constructive environment. \n● No Spam: Avoid promotional content unrelated to Web3. \n● Search First: Check if your question has already been answered. \nHow to Get Started  \n● Register: Sign up to participate in discussions. \n● Introduce Yourself: Let the community know about your interests and expertise. \n● Engage: Start discussions, share insights, and provide feedback. \nResources  \n● FAQ: Common questions and answers. \n● Documentation: In-depth guides and tutorials. \n● Community Guidelines \nJoin our community today and be a part of the Web3 revolution! \nForum Link \n \n ",
    "filename": "31. Community Forum.pdf"
  },
  {
    "id": 28,
    "content": "\n\nDeveloper Support \nWelcome to the Developer Support section, your go-to resource for technical assistance and \nguidance. \nWhat We Offer  \n● Technical Assistance: Expert support for your development queries and challenges. \n● Documentation: Comprehensive guides and API documentation. \n● Community Support: Access to a community of experienced Web3 developers. \nHow to Get Support  \n1. Browse Documentation: Find quick answers in our detailed documentation. \n2. Submit a Ticket: If you can't find an answer, submit a support ticket. \n3. Community Forums: Engage with the community for diverse perspectives. \nBest Practices  \n● Clear Descriptions: Provide detailed descriptions of your issues for quicker resolutions. \n● Include Code Snippets: Share relevant code snippets to clarify your queries. \n● Be Patient: Responses may take time due to the volume of inquiries. \n \nContact Support Developer Documentation \nWe're here to ensure your success in the Web3 ecosystem! \n \n \n ",
    "filename": "32. Developer Support.pdf"
  },
  {
    "id": 29,
    "content": "\n\nHow to Run a Full Node for an Orbit Chain \nThis section provides step-by-step instructions for running an Orbit node on your local machine. \nPrerequisites  \n● Latest Docker Image: offchainlabs/nitro-node:v2.3.4-b4cc111 \nMinimum Hardware Configuration  \n● RAM: 8-16 GB \n● CPU: 2-4 core CPU (e.g., AWS t3.xLarge) \n● Storage: Depends on the Orbit chain and its traffic over time \nRequired Parameters  \n1. Parent Chain Parameters  \nThe --parent-chain.connection.url argument requires a standard RPC endpoint for an EVM \nnode, whether self-hosted or obtained from a node service provider: \n--parent-chain.connection.url=<Parent chain RPC URL> \n2. Child Chain Parameters  \nIn the Arbitrum Orbit context, the child chain is an L2 or an L3 Orbit chain. The required \nparameters are chain.info-json and chain.name. \nchain.info-json A JSON string that contains required information about the Orbit chain. \n--chain.info-json=<Orbit Chain's chain info> \nchain.name A mandatory flag that needs to match the chain name used in --chain.info-json: \n--chain.name=<Orbit Chain's name> \n3. AnyTrust Chains For AnyTrust chains, add the following flags to the command or \nconfiguration: \n--node.data-availability.enable \n--node.data-availability.rest-aggregator.urls=<A list of DAS REST endpoints> \nOr \n--node.data-availability.rest-aggregator.online-url-list=<A URL that returns a list of the DAS \nREST endpoints> \n \n \n \n \n\n4. Important Ports  \nProtocol Port \nRPC/http 8547 \nRPC/websocket 8548 \nSequencer Feed 9642 \n \nFor the RPC/websocket protocol, use the following flags: \n--ws.port=8548 \n--ws.addr=0.0.0.0 \n--ws.origins=\\* \n5. Putting it all together  \nWhen running a Docker image, an external volume should be mounted to persist the database \nacross restarts. The mount point inside the Docker image should be /home/user/.arbitrum. \nExample: \ndocker run --rm -it -v /some/local/dir/arbitrum:/home/user/.arbitrum -p 0.0.0.0:8547:8547 -p \n0.0.0.0:8548:8548 offchainlabs/nitro-node:v2.3.4-b4cc111 --parent-chain.connection.url=<Parent \nchain RPC URL> --chain.id=<OrbitChainId> --chain.name=<My Arbitrum Orbit Chain> \n--http.api=net,web3,eth --http.corsdomain=* --http.addr=0.0.0.0 --http.vhosts=* \n--chain.info-json=<Orbit Chain's chain info> \n \nEnsure that /some/local/dir/arbitrum already exists; otherwise, the directory might be created \nwith root as the owner, and the Docker container won't be able to write to it. \nWhen using the flag --chain.info-json=<Orbit Chain's chain info>, replace <Orbit Chain's chain \ninfo> with the specific chain info JSON string of the Orbit chain for which you wish to run the \nnode. \n \nExample: \n    --chain.info-json=\"[{\\\"chain-id\\\":94692861356,\\\"parent-chain-id\\\":421614,\\\"chain-name\\\":\\\"My \nArbitrum L3 \nChain\\\",\\\"chain-config\\\":{\\\"chainId\\\":94692861356,\\\"homesteadBlock\\\":0,\\\"daoForkBlock\\\":null,\\\"d\naoForkSupport\\\":true,\\\"eip150Block\\\":0,\\\"eip150Hash\\\":\\\"0x00000000000000000000000000000\n00000000000000000000000000000000000\\\",\\\"eip155Block\\\":0,\\\"eip158Block\\\":0,\\\"byzantiumBl\nock\\\":0,\\\"constantinopleBlock\\\":0,\\\"petersburgBlock\\\":0,\\\"istanbulBlock\\\":0,\\\"muirGlacierBlock\\\":0,\n\\\"berlinBlock\\\":0,\\\"londonBlock\\\":0,\\\"clique\\\":{\\\"period\\\":0,\\\"epoch\\\":0},\\\"arbitrum\\\":{\\\"EnableArbOS\n\\\":true,\\\"AllowDebugPrecompiles\\\":false,\\\"DataAvailabilityCommittee\\\":false,\\\"InitialArbOSVersion\n\\\":10,\\\"InitialChainOwner\\\":\\\"0xAde4000C87923244f0e95b41f0e45aa3C02f1Bb2\\\",\\\"GenesisBloc\nkNum\\\":0}},\\\"rollup\\\":{\\\"bridge\\\":\\\"0xde835286442c6446E36992c036EFe261AcD87F6d\\\",\\\"inbox\\\n\n\":\\\"0x0592d3861Ea929B5d108d915c36f64EE69418049\\\",\\\"sequencer-inbox\\\":\\\"0xf9d77199288f\n00440Ed0f494Adc0005f362c17b1\\\",\\\"rollup\\\":\\\"0xF5A42aDA664E7c2dFE9DDa4459B927261BF\n90E09\\\",\\\"validator-utils\\\":\\\"0xB11EB62DD2B352886A4530A9106fE427844D515f\\\",\\\"validator-w\nallet-creator\\\":\\\"0xEb9885B6c0e117D339F47585cC06a2765AaE2E0b\\\",\\\"deployed-at\\\":1764099\n}}]\" \nFurther Reading  \nFor more detailed instructions and additional configuration options, please refer to the Arbitrum \ndocumentation here. \n \n \n ",
    "filename": "4. Setup Codex RPC Node.pdf"
  },
  {
    "id": 30,
    "content": "\n\nBlock Explorer \nThe Open Campus block explorer provides a comprehensive and user-friendly interface for \nmonitoring and analyzing network activities. It is designed to offer key insights and information \nbeneficial for both regular users and developers. Features of the Open Campus block explorer \ninclude: \n● Address Balances: Check the balance of any address on the network. \n● Transaction History: View detailed transaction records. \n● Verified Contracts: Access and review verified smart contract codes. \n● Smart Contract Code and Execution: Examine the code and execution details of smart \ncontracts. \n● Network Statistics: Get up-to-date information on network performance. \n● Mining Information: Monitor mining activities and related statistics. \n \nVisit the Open Campus Codex Block Explorer \n \n \n \n ",
    "filename": "5. Block Explorer.pdf"
  },
  {
    "id": 31,
    "content": "\n\nQuick Start \nOverview  \nOpen Campus is a Layer-3 solution enhancing Ethereum, providing an EVM-compatible \nenvironment for seamless integration. It utilizes advanced cryptographic techniques for \nefficiency and inherits Ethereum's security. \nConnecting to Codex  \nReminder \nOpen Campus Codex and its related documentation are under active development. \nAll feedback is welcome and highly appreciated. Please report errors or inconsistencies to a \nteam member or as an issue on our Issues Tracker, thank you. \nTo manually add the Open Campus Codex network to your wallet, use the following details: \n● Codex \nRPC URL ChainID Block Explorer \nURL \nCurrency \nhttps://rpc.open-campus-codex.gelato.di\ngital \n656476 Codex Block \nExplorer \nEDU \nTo add the network to MetaMask, you can either enter the data above manually or use the link \nprovided at the bottom of the Codex Block Explorer page. \nBridging Assets to Open Campus Codex Testnet  \nTo start interacting with the Open Campus Codex Testnet, you'll need to bridge your assets. \nBridging assets involves transferring cryptocurrencies from one blockchain (Arbitrum Sepolia) to \nanother (Open Campus Codex). This process expands your asset's utility by enabling its use \nwithin the Open Campus ecosystem. \nTo bridge your assets, follow the guide on asset bridging provided below. \nLearn more about bridging assets\n ↗ \nDeploying Smart Contracts on Codex  \nOpen Campus Codex provides a development environment that is designed to be familiar to \nthose who have worked with Ethereum. It allows developers to deploy smart contracts using \nexisting Ethereum tools and workflows, ensuring a smooth transition and a user experience \ncharacterized by higher throughput and reduced transaction costs. \n\nTo learn more about how to deploy your smart contracts to the Codex, refer to our \ncomprehensive guide below. \nDeploy Smart Contracts on Codex\n ↗ \nSupport Channels  \nFor support, developers can consult the community on platforms like StackExchange or join the \nofficial Discord server. \n \n ",
    "filename": "6. Quick Start.pdf"
  },
  {
    "id": 32,
    "content": "\n\nFaucet \nObtaining Testnet Tokens  \nTo acquire testnet tokens for network transactions, utilize the dRPC faucet that distributes \ntestnet ETH. Follow the verification process to receive your tokens. \nVerification Process  \nTo ensure fair and equitable access, you need to complete the following verification steps: \n1. dRPC Authorization \n○ Log in or create an account with dRPC. It's fast and free. \n2. Proof-of-Work \n○ This faucet requires mining for free testnet tokens to prevent abuse and spam. \nNote that the process of \"mining\" doesn't create new coins; it's just a time-limited \nmethod of protection. \nConnecting Wallet to Testnet  \nConfigure your wallet to connect to the Sepolia testnet where you can receive testnet ETH. \nUsing dRPC Faucet  \nAccess the dRPC faucet to obtain EDU: \n\n● dRPC Faucet \n \nOnce you have the EDU, you can proceed with testing and development on the Open Campus \nnetwork. \n \n ",
    "filename": "7. Faucet.pdf"
  },
  {
    "id": 33,
    "content": "\n\nAsset Bridging \nOverview  \nBridging assets to Open Campus is an essential process for users who wish to interact with the \nOpen Campus network. This section provides a comprehensive guide on how to bridge your \nassets effectively. \n● Direct Arbitrum Sepolia to Open Campus Codex Bridge: This is the primary method to \ntransfer assets directly from Arbitrum Sepolia to Open Campus Codex, which is essential \nfor executing transactions on Open Campus Codex. \nStep-by-Step Guide to Using the Official Bridge Portal  \n \n1. Visit the official Open Campus Bridge Portal and connect your wallet. \n2. Choose Arbitrum Sepolia as your source and Open Campus as the destination. \n3. Input the amount of assets you want to bridge. \n4. Confirm and sign the transaction with your wallet. \n\nWait for the bridging process to complete. The assets will then be available in your wallet on the \nre.al network. \nAfter the transaction is confirmed, the bridged assets will reflect in your Open Campus wallet, \nallowing you to interact with the network and its dApps. \nnote \nThe transaction times can vary based on network congestion and gas fees. Please ensure you \nhave enough ETH in your wallet to cover the transaction fees. \n \n ",
    "filename": "8. Asset Bridging.pdf"
  },
  {
    "id": 34,
    "content": "\n\nSmart Contracts \n \n ",
    "filename": "9. Smart Contracts.pdf"
  },
  {
    "id": 35,
    "content": "\n\nLearn About Open Campus Network \nExplains comprehensive insights into the architecture of Codex. \n ",
    "filename": "Learn About Open Campus Network.pdf"
  }
]